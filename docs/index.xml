<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Spring AI 1.0.0</title>
    <link>https://studyllm.github.io/docs/</link>
    <description>Recent content in Docs on Spring AI 1.0.0</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://studyllm.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>入门</title>
      <link>https://studyllm.github.io/docs/%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%85%A5%E9%97%A8/</guid>
      <description>&lt;h1 id=&#34;入门&#34;&gt;&#xA;  入门&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a5%e9%97%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节提供了如何开始使用Spring AI的起点。&#xA;您应该根据需要遵循以下每个部分中的步骤。&lt;/p&gt;&#xA;&lt;h2 id=&#34;弹簧初始化器&#34;&gt;&#xA;  弹簧初始化器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%b9%e7%b0%a7%e5%88%9d%e5%a7%8b%e5%8c%96%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;转到start.spring.io，然后选择要在新应用程序中使用的AI模型和向量存储。&lt;/p&gt;&#xA;&lt;h2 id=&#34;工件存储库&#34;&gt;&#xA;  工件存储库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e4%bb%b6%e5%ad%98%e5%82%a8%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;里程碑-使用maven-central&#34;&gt;&#xA;  里程碑-使用Maven Central&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8c%e7%a8%8b%e7%a2%91-%e4%bd%bf%e7%94%a8maven-central&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;从1.0.0-M6开始，Maven Central中提供了版本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;快照-添加快照存储库&#34;&gt;&#xA;  快照-添加快照存储库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bf%ab%e7%85%a7-%e6%b7%bb%e5%8a%a0%e5%bf%ab%e7%85%a7%e5%ad%98%e5%82%a8%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要使用Snapshot（和1.0.0-M6之前的里程碑）版本，需要在构建文件中添加以下快照存储库。&#xA;将以下存储库定义添加到Maven或Gradle构建文件中：&#xA;注意：将Maven与Spring AI快照一起使用时，请注意Maven镜像配置。如果您在&lt;code&gt;settings.xml&lt;/code&gt;中配置了镜像，如下所示：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;my-mirror&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://my-company-repository.com/maven&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通配符&lt;code&gt;*&lt;/code&gt;将所有存储库请求重定向到镜像，从而阻止对Spring快照存储库的访问。要解决此问题，请修改&lt;code&gt;mirrorOf&lt;/code&gt;配置以排除Spring存储库：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;my-mirror&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;*,!spring-snapshots,!central-portal-snapshots&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://my-company-repository.com/maven&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该配置允许Maven直接访问Spring快照存储库，同时仍然使用镜像来处理其他依赖项。&lt;/p&gt;&#xA;&lt;h2 id=&#34;依赖管理&#34;&gt;&#xA;  依赖管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%be%9d%e8%b5%96%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI物料清单（BOM）声明了给定版本的Spring AI.使用的所有依赖项的推荐版本。&#xA;将BOM表添加到项目中：&lt;/p&gt;&#xA;&lt;h2 id=&#34;为特定组件添加依赖项&#34;&gt;&#xA;  为特定组件添加依赖项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%ba%e7%89%b9%e5%ae%9a%e7%bb%84%e4%bb%b6%e6%b7%bb%e5%8a%a0%e4%be%9d%e8%b5%96%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;文档中的以下每个部分都显示了需要添加到项目生成系统中的依赖项。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;聊天模型&lt;/li&gt;&#xA;&lt;li&gt;嵌入模型&lt;/li&gt;&#xA;&lt;li&gt;图像生成模型&lt;/li&gt;&#xA;&lt;li&gt;转录模型&lt;/li&gt;&#xA;&lt;li&gt;文本到语音（TTS）模型&lt;/li&gt;&#xA;&lt;li&gt;向量数据库&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;春季ai样本&#34;&gt;&#xA;  春季AI样本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%a5%e5%ad%a3ai%e6%a0%b7%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;有关Spring AI的更多资源和示例，请参阅此页面。&lt;/p&gt;</description>
    </item>
    <item>
      <title>结构化输出转换器</title>
      <link>https://studyllm.github.io/docs/%E7%BB%93%E6%9E%84%E5%8C%96%E8%BE%93%E5%87%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E7%BB%93%E6%9E%84%E5%8C%96%E8%BE%93%E5%87%BA/</guid>
      <description>&lt;h1 id=&#34;结构化输出转换器&#34;&gt;&#xA;  结构化输出转换器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%93%e6%9e%84%e5%8c%96%e8%be%93%e5%87%ba%e8%bd%ac%e6%8d%a2%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;LLM生成结构化输出的能力对于依赖于可靠解析输出值的下游应用程序非常重要。&#xA;Spring AI结构化输出转换器有助于将LLM输出转换为结构化格式。&#xA;使用通用完成API从大型语言模型（LLM）生成结构化输出需要仔细处理输入和输出。结构化输出转换器在LLM调用之前和之后发挥关键作用，确保实现所需的输出结构。&#xA;在LLM调用之前，转换器将格式指令附加到提示符，为模型提供生成所需输出结构的明确指导。这些指令充当蓝图，塑造模型的响应以符合指定的格式。&#xA;在LLM调用之后，转换器获取模型的输出文本，并将其转换为结构化类型的实例。该转换过程涉及解析原始文本输出，并将其映射到相应的结构化数据表示，如JSON、XML或特定于域的数据结构。&lt;/p&gt;&#xA;&lt;h2 id=&#34;结构化输出api&#34;&gt;&#xA;  结构化输出API&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%93%e6%9e%84%e5%8c%96%e8%be%93%e5%87%baapi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;StructuredOutputConverter&lt;/code&gt;接口允许您获得结构化输出，例如将输出映射到Java类或基于文本的AI模型输出的值数组。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;StructuredOutputConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Converter&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, FormatProvider {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它结合了Spring Converter&amp;lt;String，T&amp;gt;接口和&lt;code&gt;FormatProvider&lt;/code&gt;接口&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FormatProvider&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;String &lt;span style=&#34;color:#a6e22e&#34;&gt;getFormat&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下图显示了使用结构化输出API时的数据流。&#xA;&#xA;  &lt;img src=&#34;../images/structured-output-api.jpg&#34; alt=&#34;结构化输出API&#34; /&gt;&#xA;&lt;code&gt;FormatProvider&lt;/code&gt;为AI模型提供特定的格式指南，使其能够生成文本输出，这些文本输出可以使用转换器转换为指定的目标类型&lt;code&gt;T&lt;/code&gt;。下面是这种格式说明的示例：&#xA;格式指令通常使用PromptTemplate追加到用户输入的末尾，如下所示：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;StructuredOutputConverter outputConverter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String userInputTemplate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ... user text input ....&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {format}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// user input with a &amp;#34;format&amp;#34; placeholder.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Prompt prompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Prompt(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; PromptTemplate(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;   &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userInputTemplate&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(..., &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;, outputConverter.&lt;span style=&#34;color:#a6e22e&#34;&gt;getFormat&lt;/span&gt;()) &lt;span style=&#34;color:#75715e&#34;&gt;// replace the &amp;#34;format&amp;#34; placeholder with the converter&amp;#39;s format.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       ).&lt;span style=&#34;color:#a6e22e&#34;&gt;createMessage&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Converter&amp;lt;String，&lt;code&gt;T&lt;/code&gt;&amp;gt;负责将模型的输出文本转换为指定类型&lt;code&gt;T&lt;/code&gt;的实例。&lt;/p&gt;</description>
    </item>
    <item>
      <title>聊天室存储器</title>
      <link>https://studyllm.github.io/docs/%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%AD%98%E5%82%A8%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%AD%98%E5%82%A8%E5%99%A8/</guid>
      <description>&lt;h1 id=&#34;聊天室存储器&#34;&gt;&#xA;  聊天室存储器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e5%ae%a4%e5%ad%98%e5%82%a8%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;大型语言模型（LLM）是无状态的，这意味着它们不保留关于先前交互的信息。当您希望跨多个交互维护上下文或状态时，这可能是一个限制。为了解决这个问题，SpringAI提供了聊天记忆功能，允许您在与LLM的多个交互中存储和检索信息。&#xA;&lt;code&gt;ChatMemory&lt;/code&gt;抽象允许您实现各种类型的内存，以支持不同的用例。消息的底层存储由&lt;code&gt;ChatMemory&lt;/code&gt;Repository处理，其唯一职责是存储和检索消息。由&lt;code&gt;ChatMemory&lt;/code&gt;实现决定保留哪些消息以及何时删除它们。策略的示例可以包括保持最后N条消息、将消息保持特定时间段或将消息保持在特定令牌限制以内。&#xA;在选择记忆类型之前，务必了解聊天室记忆和聊天历史记录之间的区别。&#xA;&lt;code&gt;ChatMemory&lt;/code&gt;抽象旨在管理聊天室内存。它允许您存储和检索与当前对话上下文相关的消息。然而，它不是存储聊天历史记录的最佳选择。如果您需要维护所有交换消息的完整记录，则应该考虑使用不同的方法，例如依赖SpringData来有效地存储和检索完整的聊天历史。&lt;/p&gt;&#xA;&lt;h2 id=&#34;快速入门&#34;&gt;&#xA;  快速入门&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;SpringAI自动配置&lt;code&gt;ChatMemory&lt;/code&gt;Bean，您可以在应用程序中直接使用。默认情况下，它使用内存中存储库来存储消息（InMemory&lt;code&gt;ChatMemory&lt;/code&gt;Repository），使用MessageWindowChatMemority实现来管理对话历史记录。如果已经配置了不同的存储库（例如，Cassandra、JDBC或Neo4j），Spring AI将使用该存储库。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ChatMemory chatMemory;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面的部分将进一步描述SpringAI中可用的不同内存类型和存储库。&lt;/p&gt;&#xA;&lt;h2 id=&#34;存储器类型&#34;&gt;&#xA;  存储器类型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%98%e5%82%a8%e5%99%a8%e7%b1%bb%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;ChatMemory&lt;/code&gt;抽象允许您实现各种类型的内存，以适应不同的用例。内存类型的选择会显著影响应用程序的性能和行为。本节描述Spring AI提供的内置内存类型及其特性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;信息窗口聊天存储器&#34;&gt;&#xA;  信息窗口聊天存储器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bf%a1%e6%81%af%e7%aa%97%e5%8f%a3%e8%81%8a%e5%a4%a9%e5%ad%98%e5%82%a8%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;MessageWindowChatMemory&lt;/code&gt;维护一个消息窗口，最大为指定的最大大小。当消息数超过最大值时，将删除较旧的消息，同时保留系统消息。默认窗口大小为20条消息。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MessageWindowChatMemory memory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MessageWindowChatMemory.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;maxMessages&lt;/span&gt;(10)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是SpringAI用于自动配置&lt;code&gt;ChatMemory&lt;/code&gt;Bean的默认消息类型。&lt;/p&gt;&#xA;&lt;h2 id=&#34;存储器存储器&#34;&gt;&#xA;  存储器存储器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%98%e5%82%a8%e5%99%a8%e5%ad%98%e5%82%a8%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI提供&lt;code&gt;ChatMemoryRepository&lt;/code&gt;抽象来存储聊天内存。本节描述了SpringAI提供的内置存储库以及如何使用它们，但如果需要，您也可以实现自己的存储库。&lt;/p&gt;&#xA;&lt;h2 id=&#34;内存中存储库&#34;&gt;&#xA;  内存中存储库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%86%85%e5%ad%98%e4%b8%ad%e5%ad%98%e5%82%a8%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;InMemoryChatMemoryRepository&lt;/code&gt;使用&lt;code&gt;ConcurrentHashMap&lt;/code&gt;将消息存储在内存中。&#xA;默认情况下，如果尚未配置其他存储库，Spring AI会自动配置InMemory&lt;code&gt;ChatMemoryRepository&lt;/code&gt;类型的ChatMemorityBean，您可以在应用程序中直接使用它。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ChatMemoryRepository chatMemoryRepository;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您希望手动创建&lt;code&gt;InMemoryChatMemoryRepository&lt;/code&gt;，可以执行以下操作：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ChatMemoryRepository repository &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InMemoryChatMemoryRepository();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jdbcchatmemoryrepository数据库&#34;&gt;&#xA;  JdbcChatMemoryRepository数据库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#jdbcchatmemoryrepository%e6%95%b0%e6%8d%ae%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;JdbcChatMemoryRepository&lt;/code&gt;是一个内置实现，使用JDBC将消息存储在关系数据库中。它适用于需要永久存储聊天室存储器的应用程序。&#xA;首先，将以下依赖项添加到项目中：&#xA;Spring AI为&lt;code&gt;JdbcChatMemoryRepository&lt;/code&gt;提供自动配置，您可以在应用程序中直接使用。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JdbcChatMemoryRepository chatMemoryRepository;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ChatMemory chatMemory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MessageWindowChatMemory.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;chatMemoryRepository&lt;/span&gt;(chatMemoryRepository)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;maxMessages&lt;/span&gt;(10)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您希望手动创建&lt;code&gt;JdbcChatMemoryRepository&lt;/code&gt;，可以通过提供&lt;code&gt;JdbcTemplate&lt;/code&gt;实例来实现：&lt;/p&gt;</description>
    </item>
    <item>
      <title>多模态API</title>
      <link>https://studyllm.github.io/docs/%E5%A4%9A%E6%A8%A1%E6%80%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%A4%9A%E6%A8%A1%E6%80%81/</guid>
      <description>&lt;h1 id=&#34;多模态api&#34;&gt;&#xA;  多模态API&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%9a%e6%a8%a1%e6%80%81api&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;人类在多个数据输入模式中同时处理知识。&#xA;与这些原则相反，机器学习通常侧重于为处理单个模态而定制的专门模型。&#xA;然而，一股新的多模态大型语言模型浪潮开始出现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;spring-ai多模态&#34;&gt;&#xA;  Spring AI多模态&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#spring-ai%e5%a4%9a%e6%a8%a1%e6%80%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;多模态是指模型同时理解和处理来自各种来源的信息的能力，包括文本、图像、音频和其他数据格式。&#xA;Spring AI消息API提供了所有必要的抽象来支持多模态LLM。&#xA;&#xA;  &lt;img src=&#34;../images/spring-ai-message-api.jpg&#34; alt=&#34;春季AI消息API&#34; /&gt;&#xA;UserMessage的内容字段主要用于文本输入，而可选媒体字段允许添加不同模式的一个或多个附加内容，如图像、音频和视频。&#xA;例如，我们可以将下面的图片（multimal.test.png）作为输入，并要求LLM解释它看到的内容。&#xA;&#xA;  &lt;img src=&#34;../images/multimodal.test.png&#34; alt=&#34;多模态测试图像&#34; /&gt;&#xA;对于大多数多模式LLM，Spring AI代码将如下所示：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; imageResource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ClassPathResource(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/multimodal.test.png&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; userMessage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; UserMessage(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Explain what do you see in this picture?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// content&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Media(MimeTypeUtils.&lt;span style=&#34;color:#a6e22e&#34;&gt;IMAGE_PNG&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;imageResource&lt;/span&gt;)); &lt;span style=&#34;color:#75715e&#34;&gt;// media&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ChatResponse response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chatModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Prompt(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userMessage&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或使用流畅的ChatClient API：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ChatClient.&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;(chatModel).&lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;(u &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; u.&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Explain what do you see on this picture?&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;media&lt;/span&gt;(MimeTypeUtils.&lt;span style=&#34;color:#a6e22e&#34;&gt;IMAGE_PNG&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ClassPathResource(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/multimodal.test.png&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并产生如下响应：&#xA;Spring AI为以下聊天模型提供多模式支持：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;人类克劳德3&lt;/li&gt;&#xA;&lt;li&gt;AWS基岩匡威&lt;/li&gt;&#xA;&lt;li&gt;Azure Open AI（例如GPT-4o模型）&lt;/li&gt;&#xA;&lt;li&gt;Mistral AI（例如，Mistral Pixtral模型）&lt;/li&gt;&#xA;&lt;li&gt;Ollama（例如LLaVA、BakLLaVA和Llama3.2型号）&lt;/li&gt;&#xA;&lt;li&gt;OpenAI（例如GPT-4和GPT-4o模型）&lt;/li&gt;&#xA;&lt;li&gt;Vertex AI双子座（例如，双子座-1.5-pro-001、双子座1.5-flash-001型号）&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>可观察性</title>
      <link>https://studyllm.github.io/docs/%E5%8F%AF%E8%A7%82%E5%AF%9F%E6%80%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%AF%E8%A7%82%E5%AF%9F%E6%80%A7/</guid>
      <description>&lt;h1 id=&#34;可观察性&#34;&gt;&#xA;  可观察性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%af%e8%a7%82%e5%af%9f%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI以Spring生态系统中的可观察性功能为基础，提供对人工智能相关操作的见解。&lt;/p&gt;&#xA;&lt;h2 id=&#34;聊天客户端&#34;&gt;&#xA;  聊天客户端&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e5%ae%a2%e6%88%b7%e7%ab%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;当调用ChatClient call（）或stream（）操作时，将记录&lt;code&gt;spring.ai.chat.client&lt;/code&gt;观察。&lt;/p&gt;&#xA;&lt;h2 id=&#34;提示内容&#34;&gt;&#xA;  提示内容&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%90%e7%a4%ba%e5%86%85%e5%ae%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;ChatClient&lt;/code&gt;提示内容通常很大，并且可能包含敏感信息。&#xA;Spring AI支持在所有跟踪后端将提示内容导出为span属性/事件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;输入数据不推荐&#34;&gt;&#xA;  输入数据（不推荐）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%be%93%e5%85%a5%e6%95%b0%e6%8d%ae%e4%b8%8d%e6%8e%a8%e8%8d%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;ChatClient&lt;/code&gt;输入数据通常很大，并且可能包含敏感信息。&#xA;Spring AI支持在所有跟踪后端将输入数据导出为span属性/事件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;聊天客户顾问&#34;&gt;&#xA;  聊天客户顾问&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e5%ae%a2%e6%88%b7%e9%a1%be%e9%97%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;执行advisor时会记录&lt;code&gt;spring.ai.advisor&lt;/code&gt;观察结果。&lt;/p&gt;&#xA;&lt;h2 id=&#34;聊天模型&#34;&gt;&#xA;  聊天模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;调用ChatModel调用或流方法时记录&lt;code&gt;gen_ai.client.operation&lt;/code&gt;观察。&lt;/p&gt;&#xA;&lt;h2 id=&#34;聊天提示和完成数据&#34;&gt;&#xA;  聊天提示和完成数据&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e6%8f%90%e7%a4%ba%e5%92%8c%e5%ae%8c%e6%88%90%e6%95%b0%e6%8d%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;聊天提示和完成数据通常很大，并且可能包含敏感信息。&#xA;如果使用OpenTelemetry跟踪后端，Spring AI支持将聊天提示和完成数据导出为span事件，&#xA;此外，Spring AI支持记录聊天提示和完成数据，这对于故障排除场景非常有用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;嵌入模型&#34;&gt;&#xA;  嵌入模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gen_ai.client.operation&lt;/code&gt;观察值在嵌入模型方法调用时记录。&lt;/p&gt;&#xA;&lt;h2 id=&#34;图像模型image-model&#34;&gt;&#xA;  图像模型（Image Model）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be%e5%83%8f%e6%a8%a1%e5%9e%8bimage-model&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gen_ai.client.operation&lt;/code&gt;观察值记录在图像模型方法调用上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;图像提示数据&#34;&gt;&#xA;  图像提示数据&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be%e5%83%8f%e6%8f%90%e7%a4%ba%e6%95%b0%e6%8d%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;图像提示数据通常很大，并且可能包含敏感信息。&#xA;如果使用OpenTelemetry跟踪后端，Spring AI支持将图像提示数据导出为span事件，&lt;/p&gt;&#xA;&lt;h2 id=&#34;向量存储区&#34;&gt;&#xA;  向量存储区&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%90%91%e9%87%8f%e5%ad%98%e5%82%a8%e5%8c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI中的所有向量存储实现都被检测为通过测微计提供度量和分布式跟踪数据。&#xA;当与vector Store交互时，会记录&lt;code&gt;db.vector.client.operation&lt;/code&gt;观察值。&lt;/p&gt;&#xA;&lt;h2 id=&#34;响应数据&#34;&gt;&#xA;  响应数据&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%93%8d%e5%ba%94%e6%95%b0%e6%8d%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;向量搜索响应数据通常很大，并且可能包含敏感信息。&#xA;如果使用OpenTelemetry跟踪后端，Spring AI支持将向量搜索响应数据导出为span事件，&lt;/p&gt;</description>
    </item>
    <item>
      <title>评估和测试</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/</guid>
      <description>&lt;h1 id=&#34;评估和测试&#34;&gt;&#xA;  评估和测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%af%84%e4%bc%b0%e5%92%8c%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;测试人工智能应用程序需要评估生成的内容，以确保人工智能模型没有产生幻觉响应。&#xA;评估响应的一种方法是使用人工智能模型本身进行评估。选择用于评估的最佳人工智能模型，该模型可能与用于生成响应的模型不同。&#xA;用于评估响应的Spring AI接口是&lt;code&gt;Evaluator&lt;/code&gt;，定义为：&#xA;评估的输入是&lt;code&gt;EvaluationRequest&lt;/code&gt;，定义为&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关性评估器&#34;&gt;&#xA;  相关性评估器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%9b%b8%e5%85%b3%e6%80%a7%e8%af%84%e4%bc%b0%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;一个实现是相关性评估器，它使用人工智能模型进行评估。在未来的版本中将提供更多的实现。&#xA;相关性评估器使用输入（&lt;code&gt;userText&lt;/code&gt;）和人工智能模型的输出（&lt;code&gt;chatResponse&lt;/code&gt;）来提问：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Your task is to evaluate if the response for the query&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is in line with the context information provided.\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You have two options to answer. Either YES/ NO.\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Answer - YES, if the response for the query&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is in line with context information otherwise NO.\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Query: \n {query}\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Response: \n {response}\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Context: \n {context}\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Answer: &amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面是一个JUnit测试的示例，该测试对加载到向量存储中的PDF文档执行RAG查询，然后评估响应是否与用户文本相关。&lt;/p&gt;</description>
    </item>
    <item>
      <title>出资指南</title>
      <link>https://studyllm.github.io/docs/%E5%87%BA%E8%B5%84%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%87%BA%E8%B5%84%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h1 id=&#34;出资指南&#34;&gt;&#xA;  出资指南&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%87%ba%e8%b5%84%e6%8c%87%e5%8d%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;代码格式和javadoc&#34;&gt;&#xA;  代码格式和Javadoc&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%a3%e7%a0%81%e6%a0%bc%e5%bc%8f%e5%92%8cjavadoc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在提交请购单之前，请运行以下命令以确保正确的格式和Javadoc处理&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;mvnw spring&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;javaformat:apply javadoc:javadoc &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Pjavadoc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;-Pjavadoc&lt;/code&gt;是一个概要文件，它支持Javadoc处理，以避免开发时的长构建时间。&lt;/p&gt;&#xA;&lt;h2 id=&#34;贡献新的人工智能模型实现&#34;&gt;&#xA;  贡献新的人工智能模型实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b4%a1%e7%8c%ae%e6%96%b0%e7%9a%84%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd%e6%a8%a1%e5%9e%8b%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;本节概述了贡献新AI模型实现的步骤。&#xA;要创建新模型，请遵循以下步骤：&#xA;通过遵循这些准则，我们可以大大扩展框架的受支持模型范围&lt;/p&gt;</description>
    </item>
    <item>
      <title>升级说明</title>
      <link>https://studyllm.github.io/docs/%E5%8D%87%E7%BA%A7%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8D%87%E7%BA%A7%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;h1 id=&#34;升级说明&#34;&gt;&#xA;  升级说明&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%87%e7%ba%a7%e8%af%b4%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;升级到100-snapshot&#34;&gt;&#xA;  升级到1.0.0-SNAPSHOT&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%87%e7%ba%a7%e5%88%b0100-snapshot&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;概述&#34;&gt;&#xA;  概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;1.0.0-SNAPSHOT版本包括对工件ID、包名称和模块结构的重大更改。本节提供了特定于使用SNAPSHOT版本的指南。&lt;/p&gt;&#xA;&lt;h2 id=&#34;添加快照存储库&#34;&gt;&#xA;  添加快照存储库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%bf%ab%e7%85%a7%e5%ad%98%e5%82%a8%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要使用1.0.0-SNAPSHOT版本，需要将快照存储库添加到构建文件中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;更新依赖项管理&#34;&gt;&#xA;  更新依赖项管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9b%b4%e6%96%b0%e4%be%9d%e8%b5%96%e9%a1%b9%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在构建配置中将Spring AI BOM版本更新为&lt;code&gt;1.0.0-SNAPSHOT&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;项目id包和模块更改&#34;&gt;&#xA;  项目ID、包和模块更改&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a1%b9%e7%9b%aeid%e5%8c%85%e5%92%8c%e6%a8%a1%e5%9d%97%e6%9b%b4%e6%94%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;1.0.0-SNAPSHOT包括对工件ID、包名称和模块结构的更改。&#xA;有关详细信息，请参阅：&lt;/p&gt;&#xA;&lt;h2 id=&#34;升级到100-rc1&#34;&gt;&#xA;  升级到1.0.0-RC1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%87%e7%ba%a7%e5%88%b0100-rc1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;聊天客户和顾问&#34;&gt;&#xA;  聊天客户和顾问&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e5%ae%a2%e6%88%b7%e5%92%8c%e9%a1%be%e9%97%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从ChatClient输入构建Prompt时，从systemText（）构建的SystemMessage现在放在消息列表的第一个位置。以前，它放在最后，导致几个模型提供程序出错。&lt;/li&gt;&#xA;&lt;li&gt;在AbstractChatMemoryAdvisor中，doNextWithProtectFromBlockingBefore（）保护的方法已从接受旧的AdvisedRequest更改为接受新的ChatClientRequest。这是一个突破性的变化，因为替代品不是M8的一部分。&lt;/li&gt;&#xA;&lt;li&gt;MessageAggregator具有一个新的方法来聚合来自ChatClientRequest的消息。以前聚合来自旧AdvisedRequest的消息的方法已被删除，因为它已在M8中标记为不推荐使用。&lt;/li&gt;&#xA;&lt;li&gt;在SimpleLoggerAdvisor中，需要更新requestToString输入参数以使用ChatClientRequest。这是一个突破性的变化，因为替代方案还不是M8的一部分。构造函数也是一样的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;advisors中的独立模板&#34;&gt;&#xA;  Advisors中的独立模板&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#advisors%e4%b8%ad%e7%9a%84%e7%8b%ac%e7%ab%8b%e6%a8%a1%e6%9d%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;执行即时增强的内置顾问已更新为使用自包含的模板。目标是让每个顾问都能够执行模板操作，而不影响或不受其他顾问中的模板和即时决策的影响。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;QuestionAnswerAdvisor需要具有以下占位符的模板（请参阅更多详细信息）：&lt;/li&gt;&#xA;&lt;li&gt;用于接收用户问题的查询占位符。&lt;/li&gt;&#xA;&lt;li&gt;questionanswercontext占位符以接收检索的上下文。&lt;/li&gt;&#xA;&lt;li&gt;PromptChatMemoryAdvisor需要具有以下占位符的模板（请参阅更多详细信息）：&lt;/li&gt;&#xA;&lt;li&gt;用于接收原始系统消息的指令占位符。&lt;/li&gt;&#xA;&lt;li&gt;存储器占位符，用于接收检索到的会话存储器。&lt;/li&gt;&#xA;&lt;li&gt;VectorStoreChatMemoryAdvisor需要具有以下占位符的模板（请参阅更多详细信息）：&lt;/li&gt;&#xA;&lt;li&gt;用于接收原始系统消息的指令占位符。&lt;/li&gt;&#xA;&lt;li&gt;long _termmemory占位符，用于接收检索到的会话内存。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;正在中断更改&#34;&gt;&#xA;  正在中断更改&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%ad%a3%e5%9c%a8%e4%b8%ad%e6%96%ad%e6%9b%b4%e6%94%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Watson AI模型被删除，因为它基于旧的文本生成，而该文本生成被认为过时，因为有一个新的聊天生成模型可用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;升级到100-m8&#34;&gt;&#xA;  升级到1.0.0-M8&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%87%e7%ba%a7%e5%88%b0100-m8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您可以使用OpenRewrite配方将升级过程自动化到1.0.0-M8。&lt;/p&gt;&#xA;&lt;h2 id=&#34;正在中断更改-1&#34;&gt;&#xA;  正在中断更改&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%ad%a3%e5%9c%a8%e4%b8%ad%e6%96%ad%e6%9b%b4%e6%94%b9-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;从Spring AI 1.0 M7升级到1.0 M8时，以前注册了工具回调的用户遇到了破坏性更改，导致工具调用功能无提示失败。这特别影响了使用弃用的tools（）方法的代码。&lt;/p&gt;&#xA;&lt;h2 id=&#34;示例&#34;&gt;&#xA;  示例&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a4%ba%e4%be%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;下面是在M7中工作但在M8中不再正常工作的代码示例：&lt;/p&gt;</description>
    </item>
    <item>
      <title>提示</title>
      <link>https://studyllm.github.io/docs/%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E6%8F%90%E7%A4%BA/</guid>
      <description>&lt;h1 id=&#34;提示&#34;&gt;&#xA;  提示&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%90%e7%a4%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;提示是引导人工智能模型生成特定输出的输入。&#xA;在与Spring AI中的AI模型的最低交互级别上，处理Spring人工智能中的提示有点类似于管理Spring MVC中的“视图”。&#xA;随着Spring AI的发展，它将引入更高级别的抽象来与AI模型交互。&#xA;提示的结构在人工智能领域中随着时间的推移而发展。&lt;/p&gt;&#xA;&lt;h2 id=&#34;api概述&#34;&gt;&#xA;  API概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#api%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;提示-1&#34;&gt;&#xA;  提示&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%90%e7%a4%ba-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;通常使用&lt;code&gt;ChatModel&lt;/code&gt;的call（）方法，该方法接受&lt;code&gt;Prompt&lt;/code&gt;实例并返回&lt;code&gt;ChatResponse&lt;/code&gt;。&#xA;&lt;code&gt;Prompt&lt;/code&gt;类充当一系列有组织的消息对象和请求&lt;code&gt;ChatOptions&lt;/code&gt;的容器。&#xA;下面是Prompt类的截断版本，为了简洁起见，省略了构造函数和实用程序方法：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Prompt&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; ModelRequest&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Message&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Message&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; messages;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; ChatOptions chatOptions;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;消息&#34;&gt;&#xA;  消息&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b6%88%e6%81%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;消息接口封装了提示文本内容、元数据属性的集合和名为&lt;code&gt;Message&lt;/code&gt;Type的分类。&#xA;接口定义如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Content&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;String &lt;span style=&#34;color:#a6e22e&#34;&gt;getContent&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getMetadata&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Content {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;MessageType &lt;span style=&#34;color:#a6e22e&#34;&gt;getMessageType&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;多模式消息类型还实现了提供媒体内容对象列表的``Media&lt;code&gt;Content&lt;/code&gt;接口。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MediaContent&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Content {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Collection&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Media&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getMedia&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;消息接口的各种实现对应于人工智能模型可以处理的不同类别的消息。&#xA;&#xA;  &lt;img src=&#34;../images/spring-ai-message-api.jpg&#34; alt=&#34;春季AI消息API&#34; /&gt;&#xA;这些角色由&lt;code&gt;MessageType&lt;/code&gt;有效地映射，如下所述。&lt;/p&gt;&#xA;&lt;h2 id=&#34;角色&#34;&gt;&#xA;  角色&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%92%e8%89%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;每条消息都被分配了特定的角色。&#xA;主要作用是：&lt;/p&gt;</description>
    </item>
    <item>
      <title>即时工程模式</title>
      <link>https://studyllm.github.io/docs/%E5%8D%B3%E6%97%B6%E5%B7%A5%E7%A8%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8D%B3%E6%97%B6%E5%B7%A5%E7%A8%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;h1 id=&#34;即时工程模式&#34;&gt;&#xA;  即时工程模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%b3%e6%97%b6%e5%b7%a5%e7%a8%8b%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;基于全面的PromptEngineering指南的Prompt Engineering技术的实际实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1配置&#34;&gt;&#xA;  1.配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;配置部分概述了如何使用SpringAI设置和调优大型语言模型（LLM）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;llm提供程序选择&#34;&gt;&#xA;  LLM提供程序选择&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#llm%e6%8f%90%e4%be%9b%e7%a8%8b%e5%ba%8f%e9%80%89%e6%8b%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;对于即时工程，您将从选择模型开始。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-anthropic&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以这样指定LLM模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(ChatOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;claude-3-7-sonnet-latest&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;// Use Anthropic&amp;#39;s Claude model&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在&#xA;  &lt;a href=&#34;../chatmodel.html&#34;&gt;参考文档&lt;/a&gt;中查找有关启用每个模型的详细信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;llm输出配置&#34;&gt;&#xA;  LLM输出配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#llm%e8%be%93%e5%87%ba%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;../images/chat-options-flow.jpg&#34; alt=&#34;聊天选项流&#34; /&gt;&#xA;在我们深入研究即时工程技术之前，有必要了解如何配置LLM的输出行为。Spring AI提供了几个配置选项，允许您通过ChatOptions构建器控制生成的各个方面。&#xA;所有配置都可以以编程方式应用，如下面的示例所示，或者在启动时通过Spring应用程序属性应用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;温度&#34;&gt;&#xA;  温度&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b8%a9%e5%ba%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;温度控制模型响应的随机性或“创造性”。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;较低的值（0.0-0.3）：更确定、更集中的响应。更适合于一致性至关重要的事实问题、分类或任务。&lt;/li&gt;&#xA;&lt;li&gt;中等值（0.4-0.7）：在决定论和创造性之间平衡。适用于一般用例。&lt;/li&gt;&#xA;&lt;li&gt;更高的值（0.8-1.0）：更具创造性、多样性和潜在的令人惊讶的响应。更适合创意写作、头脑风暴或产生多样的选择。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(ChatOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature&lt;/span&gt;(0.&lt;span style=&#34;color:#a6e22e&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;// Very deterministic output&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;理解温度对于快速工程至关重要，因为不同的技术受益于不同的温度设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;输出长度maxtokens&#34;&gt;&#xA;  输出长度（MaxTokens）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%be%93%e5%87%ba%e9%95%bf%e5%ba%a6maxtokens&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;maxTokens&lt;/code&gt;参数限制模型在其响应中可以生成的标记（单词片段）数量。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;低值（5-25）：用于单个单词、短短语或分类标签。&lt;/li&gt;&#xA;&lt;li&gt;中等值（50-500）：用于段落或简短解释。&lt;/li&gt;&#xA;&lt;li&gt;高值（1000+）：用于长格式内容、故事或复杂解释。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(ChatOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;maxTokens&lt;/span&gt;(250)  &lt;span style=&#34;color:#75715e&#34;&gt;// Medium-length response&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;设置适当的输出长度对于确保获得完整的响应而没有不必要的冗长非常重要。&lt;/p&gt;&#xA;&lt;h2 id=&#34;采样控制top-k和top-p&#34;&gt;&#xA;  采样控制（Top-K和Top-P）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%87%e6%a0%b7%e6%8e%a7%e5%88%b6top-k%e5%92%8ctop-p&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这些参数使您能够在生成期间对令牌选择过程进行细粒度控制。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker作曲</title>
      <link>https://studyllm.github.io/docs/docker%E4%BD%9C%E6%9B%B2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/docker%E4%BD%9C%E6%9B%B2/</guid>
      <description>&lt;h1 id=&#34;docker作曲&#34;&gt;&#xA;  Docker作曲&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker%e4%bd%9c%e6%9b%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI提供Spring Boot自动配置，用于建立与模型服务的连接&#xA;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;服务连接&#34;&gt;&#xA;  服务连接&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%8d%e5%8a%a1%e8%bf%9e%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;spring ai spring boot docker compose模块中提供了以下服务连接工厂：&lt;/p&gt;</description>
    </item>
    <item>
      <title>测试容器</title>
      <link>https://studyllm.github.io/docs/%E6%B5%8B%E8%AF%95%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E6%B5%8B%E8%AF%95%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;h1 id=&#34;测试容器&#34;&gt;&#xA;  测试容器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b5%8b%e8%af%95%e5%ae%b9%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI提供Spring Boot自动配置，用于建立与模型服务的连接&#xA;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;服务连接&#34;&gt;&#xA;  服务连接&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%8d%e5%8a%a1%e8%bf%9e%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;spring ai spring boot testcontainers模块中提供了以下服务连接工厂：&lt;/p&gt;</description>
    </item>
    <item>
      <title>云绑定（Cloud Bindings）</title>
      <link>https://studyllm.github.io/docs/%E4%BA%91%E7%BB%91%E5%AE%9Acloud-bindings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%91%E7%BB%91%E5%AE%9Acloud-bindings/</guid>
      <description>&lt;h1 id=&#34;云绑定cloud-bindings&#34;&gt;&#xA;  云绑定（Cloud Bindings）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%91%e7%bb%91%e5%ae%9acloud-bindings&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI基于Spring云绑定中的基础为云绑定提供支持。&#xA;例如，使用&lt;code&gt;OpenAi&lt;/code&gt;时，绑定类型为&lt;code&gt;OpenAi&lt;/code&gt;。&#xA;要启用云绑定支持，请在应用程序中包含以下依赖项。&#xA;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;可用的云绑定&#34;&gt;&#xA;  可用的云绑定&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%af%e7%94%a8%e7%9a%84%e4%ba%91%e7%bb%91%e5%ae%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;以下是spring ai spring clou绑定模块中当前提供云绑定支持的组件：&lt;/p&gt;</description>
    </item>
    <item>
      <title>OCI GenAI Cohere聊天</title>
      <link>https://studyllm.github.io/docs/%E7%9B%B8%E5%B9%B2cohere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E7%9B%B8%E5%B9%B2cohere/</guid>
      <description>&lt;h1 id=&#34;oci-genai-cohere聊天&#34;&gt;&#xA;  OCI GenAI Cohere聊天&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#oci-genai-cohere%e8%81%8a%e5%a4%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://www.oracle.com/artificial-intelligence/generative-ai/generative-ai-service/&#34;&gt;OCI GenAI服务&lt;/a&gt;提供与按需模型或专用AI集群的生成AI聊天。&#xA;&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/chat-models.htm&#34;&gt;OCI聊天模型页面&lt;/a&gt;和OCI Generative AI Playground提供了有关在OCI上使用和托管聊天模型的详细信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要一个活动的&#xA;  &lt;a href=&#34;https://signup.oraclecloud.com/&#34;&gt;Oracle云基础架构（OCI）&lt;/a&gt;帐户才能使用OCI GenAI Cohere Chat客户端。客户端提供四种不同的连接方式，包括使用用户和私钥的简单身份验证、工作负载标识、实例主体或OCI配置文件身份验证。&lt;/p&gt;&#xA;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为OCI GenAI Cohere Chat Client提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-oci-genai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-oci-genai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;聊天室属性&#34;&gt;&#xA;  聊天室属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8a%e5%a4%a9%e5%ae%a4%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;连接属性&#34;&gt;&#xA;  连接属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9e%e6%8e%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.oci.genai&lt;/code&gt;是配置与oci genai的连接的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.oci.genai.chat.cohere&lt;/code&gt;是为oci genai cohere chat配置&lt;code&gt;ChatModel&lt;/code&gt;实现的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;OCICohereChatOptions.java提供模型配置，例如要使用的模型、温度、频率惩罚等。&#xA;启动时，可以使用OCICohereChatModel（api，options）构造函数或&lt;code&gt;spring.ai.oci.genai.chat.cohere.options.*&lt;/code&gt;属性配置默认选项。&#xA;在运行时，可以通过向&lt;code&gt;Prompt&lt;/code&gt;调用添加新的特定于请求的选项来覆盖默认选项。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ChatResponse response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chatModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Prompt(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generate the names of 5 famous pirates.&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        OCICohereChatOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-model-ocid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;compartment&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-compartment-ocid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature&lt;/span&gt;(0.&lt;span style=&#34;color:#a6e22e&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://start.spring.io/&#34;&gt;创建&lt;/a&gt;一个新的SpringBoot项目，并将Spring-aistarter模型oci-genai添加到pom（或gradle）依赖项中。&#xA;在&lt;code&gt;src/main/resources&lt;/code&gt;目录下添加&lt;code&gt;application.properties&lt;/code&gt;文件，以启用和配置OCI GenAI Cohere聊天模型：&lt;/p&gt;</description>
    </item>
    <item>
      <title>谷歌VertexAI文本嵌入</title>
      <link>https://studyllm.github.io/docs/%E6%96%87%E6%9C%AC%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E6%96%87%E6%9C%AC%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;谷歌vertexai文本嵌入&#34;&gt;&#xA;  谷歌VertexAI文本嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b0%b7%e6%ad%8cvertexai%e6%96%87%e6%9c%ac%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Vertex AI支持两种类型的嵌入模型，文本和多模态。&#xA;Vertex AI文本嵌入API使用密集向量表示。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装适用于您的操作系统的gcloud CLI。&lt;/li&gt;&#xA;&lt;li&gt;通过运行以下命令进行身份验证。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud config set project &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;PROJECT_ID&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud auth application&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; login &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为VertexAI嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-vertex-ai-embedding&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-vertex-ai-embedding&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.vertex.ai.embedding&lt;/code&gt;用作允许连接到VertexAI嵌入API的属性前缀。&#xA;前缀&lt;code&gt;spring.ai.vertex.ai.embedding.text&lt;/code&gt;是属性前缀，用于为VertexAI文本嵌入配置嵌入模型实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://start.spring.io/&#34;&gt;创建&lt;/a&gt;一个新的SpringBoot项目，并将Spring-ai-starter模型顶点ai嵌入到pom（或gradle）依赖项中。&#xA;在&lt;code&gt;src/main/resources&lt;/code&gt;目录下添加&lt;code&gt;application.properties&lt;/code&gt;文件，以启用和配置VertexAi聊天模型：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-application.properties&#34; data-lang=&#34;application.properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.vertex.ai.embedding.project-id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;YOUR_PROJECT_ID&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.vertex.ai.embedding.location&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;YOUR_PROJECT_LOCATION&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.vertex.ai.embedding.text.options.model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;text-embedding-004&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将创建一个&lt;code&gt;VertexAiTextEmbeddingModel&lt;/code&gt;实现，您可以将其注入到类中。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RestController&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EmbeddingController&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; EmbeddingModel embeddingModel;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EmbeddingController&lt;/span&gt;(EmbeddingModel embeddingModel) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;embeddingModel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/ai/embedding&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Map &lt;span style=&#34;color:#a6e22e&#34;&gt;embed&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;@RequestParam&lt;/span&gt;(value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;, defaultValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tell me a joke&amp;#34;&lt;/span&gt;) String message) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;embeddingModel&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;embedForResponse&lt;/span&gt;(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(message));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;embedding&amp;#34;&lt;/span&gt;, embeddingResponse);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;手动配置&#34;&gt;&#xA;  手动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%8b%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;VertexAiText&lt;code&gt;EmbeddingModel&lt;/code&gt;实现了嵌入模型。&#xA;将spring ai顶点ai嵌入依赖项添加到项目的Maven &lt;code&gt;pom.xml&lt;/code&gt;文件中：&lt;/p&gt;</description>
    </item>
    <item>
      <title>谷歌VertexAI多模态嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%A4%9A%E6%A8%A1%E6%80%81%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%A4%9A%E6%A8%A1%E6%80%81%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;谷歌vertexai多模态嵌入&#34;&gt;&#xA;  谷歌VertexAI多模态嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b0%b7%e6%ad%8cvertexai%e5%a4%9a%e6%a8%a1%e6%80%81%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Vertex AI支持两种类型的嵌入模型，文本和多模态。&#xA;多模式嵌入模型基于您提供的输入生成1408个维度向量，其中可以包括图像、文本和视频数据的组合。&#xA;图像嵌入向量和文本嵌入向量在相同的语义空间中，具有相同的维数。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装适用于您的操作系统的gcloud CLI。&lt;/li&gt;&#xA;&lt;li&gt;通过运行以下命令进行身份验证。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud config set project &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;PROJECT_ID&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud auth application&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; login &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为VertexAI嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-vertex-ai-embedding&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-vertex-ai-embedding&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.vertex.ai.embedding&lt;/code&gt;用作允许连接到VertexAI嵌入API的属性前缀。&#xA;前缀&lt;code&gt;spring.ai.vertex.ai.embedding.multimodal&lt;/code&gt;是属性前缀，允许您为VertexAI multimodal embedding配置嵌入模型实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;手动配置&#34;&gt;&#xA;  手动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%8b%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;VertexAiMultimodalEmbeddingModel实现文档嵌入模型。&#xA;将spring ai顶点ai嵌入依赖项添加到项目的Maven &lt;code&gt;pom.xml&lt;/code&gt;文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-vertex-ai-embedding&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-vertex-ai-embedding&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，创建&lt;code&gt;VertexAiMultimodalEmbeddingModel&lt;/code&gt;，并将其用于嵌入生成：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
