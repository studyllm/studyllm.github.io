<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>嵌入模型API on Spring AI 1.0.0</title>
    <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/</link>
    <description>Recent content in 嵌入模型API on Spring AI 1.0.0</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure OpenAI嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/azure-openai%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/azure-openai%E8%BD%AF%E4%BB%B6/</guid>
      <description>&lt;h1 id=&#34;azure-openai嵌入&#34;&gt;&#xA;  Azure OpenAI嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-openai%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Azure的OpenAI扩展了OpenAI功能，为各种任务提供安全的文本生成和嵌入计算模型：&#xA;Azure OpenAI嵌入依赖于余弦相似性来计算文档和查询之间的相似性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Azure OpenAI客户端提供三种连接选项：使用Azure API密钥或使用OpenAI API密钥，或使用Microsoft Entra ID。&lt;/p&gt;&#xA;&lt;h2 id=&#34;azure-api密钥和终结点&#34;&gt;&#xA;  Azure API密钥和终结点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-api%e5%af%86%e9%92%a5%e5%92%8c%e7%bb%88%e7%bb%93%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;从&#xA;  &lt;a href=&#34;https://portal.azure.com&#34;&gt;Azure门户&lt;/a&gt;上的Azure OpenAI服务部分获取Azure OpenAI端点和api密钥。&#xA;Spring AI定义了两个配置属性：&#xA;可以通过导出环境变量来设置这些配置属性：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_AZURE_OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT AZURE KEY HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_AZURE_OPENAI_ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT ENDPOINT URL HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;openai密钥&#34;&gt;&#xA;  OpenAI密钥&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#openai%e5%af%86%e9%92%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要使用OpenAI服务（而不是Azure）进行身份验证，请提供OpenAI API密钥。这将自动将端点设置为&#xA;  &lt;a href=&#34;https://api.openai.com/v1&#34;&gt;api.openai.com/v1&lt;/a&gt;。&#xA;使用此方法时，将&lt;code&gt;spring.ai.azure.openai.chat.options.deployment-name&lt;/code&gt;属性设置为要使用的openai模型的名称。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_AZURE_OPENAI_OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT OPENAI KEY HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;microsoft条目id&#34;&gt;&#xA;  Microsoft条目ID&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#microsoft%e6%9d%a1%e7%9b%aeid&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;对于使用Microsoft Entra ID（以前称为Azure Active Directory）的无密钥身份验证，请仅设置spring.ai.Azure.openai.endpoint配置属性，而不是上面提到的api密钥属性。&#xA;仅查找端点属性，应用程序将评估用于检索凭据的几个不同选项，并将使用令牌凭据创建&lt;code&gt;OpenAIClient&lt;/code&gt;实例。&lt;/p&gt;&#xA;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为Azure OpenAI嵌入模型提供Spring Boot自动配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mistral AI嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/mistral%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/mistral%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</guid>
      <description>&lt;h1 id=&#34;mistral-ai嵌入&#34;&gt;&#xA;  Mistral AI嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mistral-ai%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI支持Mistral AI的文本嵌入模型。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用MistralAI创建一个API来访问MistralAI嵌入模型。&#xA;在&#xA;  &lt;a href=&#34;https://auth.mistral.ai/ui/registration&#34;&gt;MistralAI注册页面&lt;/a&gt;创建帐户，并在&#xA;  &lt;a href=&#34;https://console.mistral.ai/api-keys/&#34;&gt;API密钥页面&lt;/a&gt;上生成令牌。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_MISTRALAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT KEY HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为MistralAI嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-mistral-ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-mistral-ai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;重试属性&#34;&gt;&#xA;  重试属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8d%e8%af%95%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.retry&lt;/code&gt;用作属性前缀，允许您配置Mistral ai嵌入模型的重试机制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;连接属性&#34;&gt;&#xA;  连接属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9e%e6%8e%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.mistralai&lt;/code&gt;用作允许连接到mistralai的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀spring.ai.mistalai.mbedding是属性前缀，用于配置mistralai的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;MistralAiEmbeddingOptions.java提供MistralAI配置，如要使用的模型等。&#xA;也可以使用spring.ai.mistalai.mbedding.options属性配置默认选项。&#xA;在启动时，使用&lt;code&gt;MistralAiEmbeddingModel&lt;/code&gt;构造函数设置用于所有嵌入请求的默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        MistralAiEmbeddingOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;withModel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Different-Embedding-Model-Deployment-Name&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这将创建一个可以注入到类中的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MiniMax聊天</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E5%80%BC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E5%80%BC/</guid>
      <description>&lt;h1 id=&#34;minimax聊天&#34;&gt;&#xA;  MiniMax聊天&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#minimax%e8%81%8a%e5%a4%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI支持MiniMax的各种人工智能语言模型。您可以与MiniMax语言模型交互，并基于MiniMax模型创建多语言对话助手。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用MiniMax创建API来访问MiniMax语言模型。&#xA;在&#xA;  &lt;a href=&#34;https://www.minimaxi.com/login&#34;&gt;MiniMax注册页面&lt;/a&gt;创建帐户，并在[&#xA;  &lt;a href=&#34;https://www.minimaxi.com/user-center/basic-information/interface-key&#34;&gt;API密钥页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.minimaxi.com/user-center/basic-information/interface-key&#34;&gt;https://www.minimaxi.com/user-center/basic-information/interface-key&lt;/a&gt;)上生成令牌。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_MINIMAX_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT KEY HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为Azure MiniMax嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-minimax&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-minimax&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;重试属性&#34;&gt;&#xA;  重试属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8d%e8%af%95%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.retry&lt;/code&gt;用作属性前缀，允许您为MiniMax嵌入模型配置重试机制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;连接属性&#34;&gt;&#xA;  连接属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9e%e6%8e%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.minimax&lt;/code&gt;用作允许连接到minimax的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.minimax.embedding&lt;/code&gt;是为minimax配置&lt;code&gt;EmbeddingModel&lt;/code&gt;实现的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;MiniMaxEmbeddingOptions.java提供MiniMax配置，如要使用的模型等。&#xA;也可以使用spring.ai.miminax.embedding.options属性配置默认选项。&#xA;在启动时，使用&lt;code&gt;MiniMaxEmbeddingModel&lt;/code&gt;构造函数设置用于所有嵌入请求的默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        MiniMaxEmbeddingOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Different-Embedding-Model-Deployment-Name&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这将创建一个可以注入到类中的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle云基础架构（OCI）GenAI嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/oci-genai%E5%85%AC%E5%8F%B8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/oci-genai%E5%85%AC%E5%8F%B8/</guid>
      <description>&lt;h1 id=&#34;oracle云基础架构ocigenai嵌入&#34;&gt;&#xA;  Oracle云基础架构（OCI）GenAI嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#oracle%e4%ba%91%e5%9f%ba%e7%a1%80%e6%9e%b6%e6%9e%84ocigenai%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://www.oracle.com/artificial-intelligence/generative-ai/generative-ai-service/&#34;&gt;OCI GenAI服务&lt;/a&gt;提供按需模型或专用AI集群的文本嵌入。&#xA;&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/embed-models.htm&#34;&gt;OCI嵌入模型页面&lt;/a&gt;和&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/use-playground-embed.htm&#34;&gt;OCI文本嵌入页面&lt;/a&gt;提供了有关在OCI上使用和托管嵌入模型的详细信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为OCI GenAI嵌入客户端提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-oci-genai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-oci-genai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.oci.genai&lt;/code&gt;是配置与oci genai的连接的属性前缀。&#xA;前缀spring.ai.oci.genai.mbedding是为oci genai配置&lt;code&gt;EmbeddingModel&lt;/code&gt;实现的属性前缀&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;OCIEmbeddingOptions&lt;/code&gt;提供嵌入请求的配置信息。&#xA;在启动时，使用&lt;code&gt;OCIEmbeddingOptions&lt;/code&gt;构造函数设置用于所有嵌入请求的默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        OCIEmbeddingOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-other-embedding-model&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;示例代码&#34;&gt;&#xA;  示例代码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a4%ba%e4%be%8b%e4%bb%a3%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这将创建一个可以注入到类中的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ollama嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E5%A5%A5%E6%8B%89%E9%A9%ACollama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E5%A5%A5%E6%8B%89%E9%A9%ACollama/</guid>
      <description>&lt;h1 id=&#34;ollama嵌入&#34;&gt;&#xA;  Ollama嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ollama%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;使用Ollama，您可以在本地运行各种&#xA;  &lt;a href=&#34;https://ollama.com/search?c=embedding&#34;&gt;人工智能模型&lt;/a&gt;，并从中生成嵌入。&#xA;&lt;code&gt;OllamaEmbeddingModel&lt;/code&gt;实现利用Ollama-Embeddings API端点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;首先需要访问Ollama实例。有几个选项，包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在本地计算机上下载并安装Ollama。&lt;/li&gt;&#xA;&lt;li&gt;通过Testcontainers配置和运行Ollama。&lt;/li&gt;&#xA;&lt;li&gt;通过Kubernetes服务绑定绑定到Ollama实例。&#xA;您可以从&#xA;  &lt;a href=&#34;https://ollama.com/search?c=embedding&#34;&gt;Ollama模型库&lt;/a&gt;中提取要在应用程序中使用的模型：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-shellscript&#34; data-lang=&#34;shellscript&#34;&gt;ollama pull &amp;lt;model-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;您还可以拉动数千个免费&#xA;  &lt;a href=&#34;https://huggingface.co/models?library=gguf&amp;amp;sort=trending&#34;&gt;GGUF拥抱面部模型&lt;/a&gt;中的任何一个：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-shellscript&#34; data-lang=&#34;shellscript&#34;&gt;ollama pull hf.co/&amp;lt;username&amp;gt;/&amp;lt;model-repository&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者，可以启用该选项以自动下载任何所需的模型：自动拉动模型。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为Azure Ollama嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;基本属性&#34;&gt;&#xA;  基本属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.ollama&lt;/code&gt;是配置与ollama的连接的属性前缀&#xA;下面是用于初始化Ollama集成和自动提取模型的属性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.ollama.embedding.&lt;/code&gt;options``是配置ollama嵌入模型的属性前缀。&#xA;以下是Ollama嵌入模型的高级请求参数：&#xA;其余选项属性基于&#xA;  &lt;a href=&#34;https://github.com/ollama/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values&#34;&gt;Ollama有效参数和值&lt;/a&gt;以及&#xA;  &lt;a href=&#34;https://github.com/ollama/ollama/blob/main/api/types.go&#34;&gt;Ollama类型&lt;/a&gt;。默认值基于：&#xA;  &lt;a href=&#34;https://github.com/ollama/ollama/blob/main/api/types.go&#34;&gt;Ollama类型&lt;/a&gt;默认值。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;OllamaOptions.java提供Ollama配置，如要使用的模型、低级GPU和CPU调整等。&#xA;也可以使用&lt;code&gt;spring.ai.ollama.embedding.options&lt;/code&gt;属性配置默认选项。&#xA;在启动时，使用OllamaEmbeddingModel（OllamaApi OllamaApi，&lt;code&gt;OllamaOptions&lt;/code&gt; defaultOptions）配置用于所有嵌入请求的默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        OllamaOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Different-Embedding-Model-Deployment-Name&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;truncates&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;自动牵引型号&#34;&gt;&#xA;  自动牵引型号&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e7%89%b5%e5%bc%95%e5%9e%8b%e5%8f%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;当模型在Ollama实例中不可用时，Spring AI Ollama可以自动拉取模型。&#xA;拉动模型有三种策略：&lt;/p&gt;</description>
    </item>
    <item>
      <title>变压器（ONNX）嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/onnx%E5%8F%98%E5%8E%8B%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/onnx%E5%8F%98%E5%8E%8B%E5%99%A8/</guid>
      <description>&lt;h1 id=&#34;变压器onnx嵌入&#34;&gt;&#xA;  变压器（ONNX）嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%98%e5%8e%8b%e5%99%a8onnx%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;Transformers&lt;/code&gt;EmbeddingModel``是一个Embedding Model实现，它使用选定的句子转换器本地计算&#xA;  &lt;a href=&#34;https://www.sbert.net/examples/applications/computing-embeddings/README.html#sentence-embeddings-with-transformers&#34;&gt;句子嵌入&lt;/a&gt;。&#xA;可以使用任何&#xA;  &lt;a href=&#34;https://huggingface.co/spaces/mteb/leaderboard&#34;&gt;HuggingFace嵌入模型&lt;/a&gt;。&#xA;它使用&#xA;  &lt;a href=&#34;https://www.sbert.net/docs/pretrained_models.html&#34;&gt;预先训练的&lt;/a&gt;变压器模型，序列化为开放神经网络交换（ONNX）格式。&#xA;应用Deep Java Library和Microsoft ONNX Java Runtime库来运行ONNX模型并计算Java中的嵌入。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要在Java中运行，我们需要将Tokenizer和Transformer Model序列化为&lt;code&gt;ONNX&lt;/code&gt;格式。&#xA;用&#xA;  &lt;a href=&#34;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&#34;&gt;最佳cli&lt;/a&gt;序列化-实现这一点的一种快速方法是使用&#xA;  &lt;a href=&#34;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&#34;&gt;最佳cli&lt;/a&gt;命令行工具。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ./venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; pip install --upgrade pip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; pip install optimum onnx onnxruntime sentence-transformers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; optimum-cli export onnx --model sentence-transformers/all-MiniLM-L6-v2 onnx-output-folder&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;片段将句子转换器/all-MiniLM-L6-v2转换器导出到onnx输出文件夹文件夹中。后者包括嵌入模型使用的&lt;code&gt;tokenizer.json&lt;/code&gt;和&lt;code&gt;model.onnx&lt;/code&gt;文件。&#xA;代替所有MiniLM-L6-v2，您可以选择任何拥抱面变压器标识符或提供直接文件路径。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为ONNX变压器嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-transformers&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-transformers&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要配置它，请使用&lt;code&gt;spring.ai.embedding.transformer.*&lt;/code&gt;属性。&#xA;例如，将其添加到application.properties文件中，以使用intfloat/e5-small-v2文本嵌入模型配置客户端：&#xA;支持的属性的完整列表为：&lt;/p&gt;&#xA;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;错误和特殊情况&#34;&gt;&#xA;  错误和特殊情况&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%94%99%e8%af%af%e5%92%8c%e7%89%b9%e6%ae%8a%e6%83%85%e5%86%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;手动配置&#34;&gt;&#xA;  手动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%8b%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;如果不使用Spring Boot，则可以手动配置Onnx Transformers嵌入模型。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAI嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E5%BC%80%E6%94%BE%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E5%BC%80%E6%94%BE%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</guid>
      <description>&lt;h1 id=&#34;openai嵌入&#34;&gt;&#xA;  OpenAI嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#openai%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI支持OpenAI的文本嵌入模型。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用OpenAI创建一个API来访问OpenAI嵌入模型。&#xA;在&#xA;  &lt;a href=&#34;https://platform.openai.com/signup&#34;&gt;OpenAI注册页面&lt;/a&gt;创建帐户，并在&#xA;  &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;API密钥页面&lt;/a&gt;上生成令牌。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT KEY HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为OpenAI嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-openai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-openai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;重试属性&#34;&gt;&#xA;  重试属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8d%e8%af%95%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.retry&lt;/code&gt;用作属性前缀，允许您为OpenAI嵌入模型配置重试机制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;连接属性&#34;&gt;&#xA;  连接属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9e%e6%8e%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.openai&lt;/code&gt;用作允许连接到openai的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.openai.embedding&lt;/code&gt;是为openai配置&lt;code&gt;EmbeddingModel&lt;/code&gt;实现的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;OpenAiEmbeddingOptions.java提供OpenAI配置，如要使用的模型等。&#xA;也可以使用&lt;code&gt;spring.ai.openai.embedding.options&lt;/code&gt;属性配置默认选项。&#xA;在启动时，使用&lt;code&gt;OpenAiEmbeddingModel&lt;/code&gt;构造函数设置用于所有嵌入请求的默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        OpenAiEmbeddingOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Different-Embedding-Model-Deployment-Name&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这将创建一个可以注入到类中的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgresML嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E9%82%AE%E6%94%BFml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E9%82%AE%E6%94%BFml/</guid>
      <description>&lt;h1 id=&#34;postgresml嵌入&#34;&gt;&#xA;  PostgresML嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#postgresml%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI支持PostgresML文本嵌入模型。&#xA;嵌入是文本的数字表示。&#xA;许多预先训练的LLM可以用于从PostgresML中的文本生成嵌入。&lt;/p&gt;&#xA;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为Azure PostgresML嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-postgresml-embedding&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-postgresml-embedding&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;spring.ai.postgresml.embedding.options.*&lt;/code&gt;属性配置&lt;code&gt;PostgresMlEmbeddingModel&lt;/code&gt;。链接&lt;/p&gt;&#xA;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.postgresml.embedding&lt;/code&gt;是属性前缀，用于配置postgresml嵌入的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;使用PostgresMlEmbeddingOptions.java配置带有选项的PostgresMLEmbedding模型，如要使用的模型等。&#xA;启动时，可以将&lt;code&gt;PostgresMlEmbeddingOptions&lt;/code&gt;传递给PostgresMLEmbedding Model构造函数，以配置用于所有嵌入请求的默认选项。&#xA;在运行时，可以在&lt;code&gt;EmbeddingRequest&lt;/code&gt;中使用PostgresMlEmbedding选项覆盖默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            PostgresMlEmbeddingOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                .&lt;span style=&#34;color:#a6e22e&#34;&gt;transformer&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;intfloat/e5-small&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                .&lt;span style=&#34;color:#a6e22e&#34;&gt;vectorType&lt;/span&gt;(VectorType.&lt;span style=&#34;color:#a6e22e&#34;&gt;PG_ARRAY&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                .&lt;span style=&#34;color:#a6e22e&#34;&gt;kwargs&lt;/span&gt;(Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;device&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gpu&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这将创建一个可以注入到类中的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>千凡嵌件</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E5%8D%83%E5%B8%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E5%8D%83%E5%B8%86/</guid>
      <description>&lt;h1 id=&#34;千凡嵌件&#34;&gt;&#xA;  千凡嵌件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%83%e5%87%a1%e5%b5%8c%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;此功能已移至Spring AI社区存储库。&#xA;有关最新版本，请访问github.com/spring-ai-community/chanfan。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ZhiPuAI嵌入</title>
      <link>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E6%99%BA%E6%B5%A6ai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B/%E6%99%BA%E6%B5%A6ai/</guid>
      <description>&lt;h1 id=&#34;zhipuai嵌入&#34;&gt;&#xA;  ZhiPuAI嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#zhipuai%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI支持智普AI的文本嵌入模型。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前提条件&#34;&gt;&#xA;  前提条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用ZhiPuAI创建API来访问ZhiPu AI语言模型。&#xA;在智浦AI注册页面创建账户，并在&lt;code&gt;API Key&lt;/code&gt;s页面上生成代币。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SPRING_AI_ZHIPU_AI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;INSERT KEY HERE&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和bom表&#34;&gt;&#xA;  添加存储库和BOM表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8cbom%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI工件发布在Maven Central和Spring Snapshot&#xA;  &lt;a href=&#34;../../getting-started.html#repositories&#34;&gt;存储库&lt;/a&gt;中。&#xA;为了帮助进行依赖关系管理，Spring AI提供了BOM（物料清单），以确保在整个项目中使用一致版本的Spring AI。请参阅依赖项管理部分，将Spring AI BOM添加到构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI为Azure ZhiPuAI嵌入模型提供Spring Boot自动配置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-zhipuai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或到Gradle build.Gradle构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-zhipuai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;重试属性&#34;&gt;&#xA;  重试属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8d%e8%af%95%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.retry&lt;/code&gt;用作属性前缀，允许您配置ZhiPuAI嵌入模型的重试机制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;连接属性&#34;&gt;&#xA;  连接属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9e%e6%8e%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.zhipuai&lt;/code&gt;用作允许连接到Zipuai的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀&lt;code&gt;spring.ai.zhipuai.embedding&lt;/code&gt;是为zhipuai配置&lt;code&gt;EmbeddingModel&lt;/code&gt;实现的属性前缀。&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行时选项&#34;&gt;&#xA;  运行时选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e6%97%b6%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;ZhiPuAiEmbeddingOptions.java提供了ZhiPuAI配置，如要使用的模型等。&#xA;也可以使用&lt;code&gt;spring.ai.zhipuai.embedding.options&lt;/code&gt;属性配置默认选项。&#xA;在启动时，使用&lt;code&gt;ZhiPuAiEmbeddingModel&lt;/code&gt;构造函数设置用于所有嵌入请求的默认选项。&#xA;例如，要覆盖特定请求的默认模型名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EmbeddingResponse embeddingResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; embeddingModel.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; EmbeddingRequest(List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World is big and salvation is near&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ZhiPuAiEmbeddingOptions.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Different-Embedding-Model-Deployment-Name&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;样本控制器&#34;&gt;&#xA;  样本控制器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b7%e6%9c%ac%e6%8e%a7%e5%88%b6%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;这将创建一个可以注入到类中的&lt;code&gt;EmbeddingModel&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
