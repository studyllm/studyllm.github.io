<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>嵌入模型 API on Spring AI 1.0.0</title>
    <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/</link>
    <description>Recent content in 嵌入模型 API on Spring AI 1.0.0</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure OpenAI 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/azure-openai-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/azure-openai-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;azure-openai-嵌入&#34;&gt;&#xA;  Azure OpenAI 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-openai-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Azure 的 OpenAI 扩展了 OpenAI 功能，为各种任务提供安全的文本生成和嵌入计算模型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;相似性嵌入擅长捕捉两段或多段文本之间的语义相似性。&lt;/li&gt;&#xA;&lt;li&gt;文本搜索嵌入有助于衡量长文档是否与短查询相关。&lt;/li&gt;&#xA;&lt;li&gt;代码搜索嵌入对于嵌入代码片段和嵌入自然语言搜索查询很有用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Azure OpenAI 嵌入依靠 &lt;code&gt;cosine similarity&lt;/code&gt; 来计算文档和查询之间的相似度。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Azure OpenAI 客户端提供三种连接选项：使用 Azure API 密钥或使用 OpenAI API 密钥，或使用 Microsoft Entra ID。&lt;/p&gt;&#xA;&lt;h2 id=&#34;azure-api-密钥和端点&#34;&gt;&#xA;  Azure API 密钥和端点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-api-%e5%af%86%e9%92%a5%e5%92%8c%e7%ab%af%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;从 [&#xA;  &lt;a href=&#34;https://portal.azure.com&#34;&gt;Azure 门户&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://portal.azure.com&#34;&gt;https://portal.azure.com&lt;/a&gt;)上的 Azure OpenAI 服务部分获取 Azure OpenAI &lt;code&gt;endpoint&lt;/code&gt; 和 &lt;code&gt;api-key&lt;/code&gt; 。&lt;/p&gt;&#xA;&lt;p&gt;Spring AI 定义了两个配置属性：&lt;/p&gt;&#xA;&lt;p&gt;您可以在 &lt;code&gt;application.properties&lt;/code&gt; 或 &lt;code&gt;application.yml&lt;/code&gt; 文件中设置这些配置属性：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.azure.openai.api-key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;your-azure-api-key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.azure.openai.endpoint&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;your-azure-endpoint-url&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您希望使用环境变量来存储 API 密钥等敏感信息，则可以在配置中使用 Spring 表达式语言 (SpEL)：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In application.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;azure&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;openai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;api-key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${AZURE_OPENAI_API_KEY}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;endpoint&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${AZURE_OPENAI_ENDPOINT}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In your environment or .env file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export AZURE_OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-azure-openai-api-key&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export AZURE_OPENAI_ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-azure-endpoint-url&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;openai-密钥&#34;&gt;&#xA;  OpenAI 密钥&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#openai-%e5%af%86%e9%92%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要使用 OpenAI 服务（而非 Azure）进行身份验证，请提供 OpenAI API 密钥。这将自动将端点设置为 [&#xA;  &lt;a href=&#34;https://api.openai.com/v1&#34;&gt;api.openai.com/v1&lt;/a&gt;](https://&#xA;  &lt;a href=&#34;https://api.openai.com/v1&#34;&gt;api.openai.com/v1&lt;/a&gt;) 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mistral AI 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/mistral-ai-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/mistral-ai-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;mistral-ai-嵌入&#34;&gt;&#xA;  Mistral AI 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mistral-ai-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI 支持 Mistral AI 的文本嵌入模型。嵌入是文本的矢量表示，它通过段落在高维向量空间中的位置来捕捉其语义。Mistral AI 嵌入 API 提供了尖端、先进的文本嵌入方法，可用于多种 NLP 任务。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用 MistralAI 创建一个 API 来访问 MistralAI 嵌入模型。&lt;/p&gt;&#xA;&lt;p&gt;在 [&#xA;  &lt;a href=&#34;https://auth.mistral.ai/ui/registration&#34;&gt;MistralAI 注册页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://auth.mistral.ai/ui/registration&#34;&gt;https://auth.mistral.ai/ui/registration&lt;/a&gt;)创建一个帐户，并在 [&#xA;  &lt;a href=&#34;https://console.mistral.ai/api-keys/&#34;&gt;API 密钥页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://console.mistral.ai/api-keys/&#34;&gt;https://console.mistral.ai/api-keys/&lt;/a&gt;)上生成令牌。&lt;/p&gt;&#xA;&lt;p&gt;Spring AI 项目定义了一个名为 &lt;code&gt;spring.ai.mistralai.api-key&lt;/code&gt; 的配置属性，您应该将其设置为从 console.mistralai.ai 获取的 &lt;code&gt;API Key&lt;/code&gt; 的值。&lt;/p&gt;&#xA;&lt;p&gt;您可以在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置此配置属性：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.mistralai.api-key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;your-mistralai-api-key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了在处理 API 密钥等敏感信息时增强安全性，您可以使用 Spring 表达式语言 (SpEL) 来引用环境变量：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In application.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;mistralai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;api-key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${MISTRALAI_API_KEY}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In your environment or .env file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export MISTRALAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-mistralai-api-key&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您还可以在应用程序代码中以编程方式设置此配置：&lt;/p&gt;</description>
    </item>
    <item>
      <title>MiniMax 聊天</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/minimax-%E8%81%8A%E5%A4%A9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/minimax-%E8%81%8A%E5%A4%A9/</guid>
      <description>&lt;h1 id=&#34;minimax-聊天&#34;&gt;&#xA;  MiniMax 聊天&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#minimax-%e8%81%8a%e5%a4%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI 支持 MiniMax 的各种 AI 语言模型。您可以与 MiniMax 语言模型进行交互，并基于 MiniMax 模型创建多语言对话助手。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用 MiniMax 创建一个 API 来访问 MiniMax 语言模型。&lt;/p&gt;&#xA;&lt;p&gt;在 [&#xA;  &lt;a href=&#34;https://www.minimaxi.com/login&#34;&gt;MiniMax 注册页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.minimaxi.com/login&#34;&gt;https://www.minimaxi.com/login&lt;/a&gt;)创建一个帐户，并在 [&#xA;  &lt;a href=&#34;https://www.minimaxi.com/user-center/basic-information/interface-key&#34;&gt;API Keys 页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.minimaxi.com/user-center/basic-information/interface-key&#34;&gt;https://www.minimaxi.com/user-center/basic-information/interface-key&lt;/a&gt;)生成令牌。&lt;/p&gt;&#xA;&lt;p&gt;Spring AI 项目定义了一个名为 &lt;code&gt;spring.ai.minimax.api-key&lt;/code&gt; 的配置属性，您应该将其设置为从 &lt;code&gt;API Key&lt;/code&gt;s 页面获取的 &lt;code&gt;API Key&lt;/code&gt; 的值。&lt;/p&gt;&#xA;&lt;p&gt;您可以在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置此配置属性：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.minimax.api-key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;your-minimax-api-key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了在处理 API 密钥等敏感信息时增强安全性，您可以使用 Spring 表达式语言 (SpEL) 来引用环境变量：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In application.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;minimax&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;api-key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${MINIMAX_API_KEY}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In your environment or .env file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export MINIMAX_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-minimax-api-key&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您还可以在应用程序代码中以编程方式设置此配置：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle 云基础设施 (OCI) GenAI 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/oracle-%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD-oci-genai-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/oracle-%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD-oci-genai-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;oracle-云基础设施-oci-genai-嵌入&#34;&gt;&#xA;  Oracle 云基础设施 (OCI) GenAI 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#oracle-%e4%ba%91%e5%9f%ba%e7%a1%80%e8%ae%be%e6%96%bd-oci-genai-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://www.oracle.com/artificial-intelligence/generative-ai/generative-ai-service/&#34;&gt;OCI GenAI 服务&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.oracle.com/artificial-intelligence/generative-ai/generative-ai-service/&#34;&gt;https://www.oracle.com/artificial-intelligence/generative-ai/generative-ai-service/&lt;/a&gt;)提供按需模型或专用 AI 集群的文本嵌入。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/embed-models.htm&#34;&gt;OCI 嵌入模型页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/embed-models.htm&#34;&gt;https://docs.oracle.com/en-us/iaas/Content/generative-ai/embed-models.htm&lt;/a&gt;)和 [&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/use-playground-embed.htm&#34;&gt;OCI 文本嵌入页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/generative-ai/use-playground-embed.htm&#34;&gt;https://docs.oracle.com/en-us/iaas/Content/generative-ai/use-playground-embed.htm&lt;/a&gt;)提供了有关在 OCI 上使用和托管嵌入模型的详细信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;添加存储库和-bom&#34;&gt;&#xA;  添加存储库和 BOM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8c-bom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 的构件已发布在 Maven Central 和 Spring Snapshot 仓库中。请参阅 [&#xA;  &lt;a href=&#34;../../getting-started.html#artifact-repositories&#34;&gt;“构件仓库”&lt;/a&gt;](../../getting-started.html#artifact-repositories) 部分，将这些仓库添加到您的构建系统中。&lt;/p&gt;&#xA;&lt;p&gt;为了帮助管理依赖项，Spring AI 提供了 BOM（物料清单），以确保在整个项目中使用一致版本的 Spring AI。请参阅[&#xA;  &lt;a href=&#34;../../getting-started.html#dependency-management&#34;&gt;依赖项管理&lt;/a&gt;](../../getting-started.html#dependency-management)部分，将 Spring AI BOM 添加到您的构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 OCI GenAI 嵌入客户端提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-oci-genai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-oci-genai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;嵌入属性&#34;&gt;&#xA;  嵌入属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%85%a5%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;前缀 &lt;code&gt;spring.ai.oci.genai&lt;/code&gt; 是配置与 OCI GenAI 的连接的属性前缀。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ollama 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/ollama-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/ollama-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;ollama-嵌入&#34;&gt;&#xA;  Ollama 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ollama-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;使用 [&#xA;  &lt;a href=&#34;https://ollama.ai/&#34;&gt;Ollama&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://ollama.ai/&#34;&gt;https://ollama.ai/&lt;/a&gt;) ，您可以在本地运行各种 [&#xA;  &lt;a href=&#34;https://ollama.com/search?c=embedding&#34;&gt;AI 模型&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://ollama.com/search?c=embedding&#34;&gt;https://ollama.com/search?c=embedding&lt;/a&gt;) ，并从中生成嵌入。嵌入是一个浮点数向量（列表）。两个向量之间的距离衡量它们的关联性。距离越小，关联性越高；距离越大，关联性越低。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;OllamaEmbeddingModel&lt;/code&gt; 实现利用了 Ollama [&#xA;  &lt;a href=&#34;https://github.com/ollama/ollama/blob/main/docs/api.md#generate-embeddings&#34;&gt;Embeddings API&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://github.com/ollama/ollama/blob/main/docs/api.md#generate-embeddings&#34;&gt;https://github.com/ollama/ollama/blob/main/docs/api.md#generate-embeddings&lt;/a&gt;) 端点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;首先，您需要访问 Ollama 实例。有以下几种选择：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在本地机器上下载并安装 Ollama 。&lt;/li&gt;&#xA;&lt;li&gt;通过 Testcontainers 配置并运行 Ollama 。&lt;/li&gt;&#xA;&lt;li&gt;通过 Kubernetes 服务绑定绑定到 Ollama 实例。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;您可以从 [&#xA;  &lt;a href=&#34;https://ollama.com/search?c=embedding&#34;&gt;Ollama 模型库中&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://ollama.com/search?c=embedding&#34;&gt;https://ollama.com/search?c=embedding&lt;/a&gt;)提取您想要在应用程序中使用的模型：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-shellscript&#34; data-lang=&#34;shellscript&#34;&gt;ollama pull &amp;lt;model-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;您还可以从数千个免费的 [&#xA;  &lt;a href=&#34;https://huggingface.co/models?library=gguf&amp;amp;sort=trending&#34;&gt;GGUF Hugging Face Models&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://huggingface.co/models?library=gguf&amp;amp;sort=trending&#34;&gt;https://huggingface.co/models?library=gguf&amp;sort=trending&lt;/a&gt;) 中挑选任意一个：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-shellscript&#34; data-lang=&#34;shellscript&#34;&gt;ollama pull hf.co/&amp;lt;username&amp;gt;/&amp;lt;model-repository&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者，您可以启用自动下载任何所需模型的选项： [&#xA;  &lt;a href=&#34;../../../../#auto-pulling-models&#34;&gt;自动拉取模型&lt;/a&gt;](#auto-pulling-models) 。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Azure Ollama 嵌入模型提供 Spring Boot 自动配置。要启用它，请将以下依赖项添加到 Maven &lt;code&gt;pom.xml&lt;/code&gt; 或 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件中：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transformers（ONNX）嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/transformersonnx%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/transformersonnx%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;transformersonnx嵌入&#34;&gt;&#xA;  Transformers（ONNX）嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#transformersonnx%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;`Transformers&lt;code&gt;EmbeddingModel``` 是 &lt;/code&gt;EmbeddingModel`` 实现，它使用选定的[&#xA;  &lt;a href=&#34;https://www.sbert.net/&#34;&gt;句子转换器&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.sbert.net/&#34;&gt;https://www.sbert.net/&lt;/a&gt;)在本地计算[&#xA;  &lt;a href=&#34;https://www.sbert.net/examples/applications/computing-embeddings/README.html#sentence-embeddings-with-transformers&#34;&gt;句子嵌入&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.sbert.net/examples/applications/computing-embeddings/README.html#sentence-embeddings-with-transformers&#34;&gt;https://www.sbert.net/examples/applications/computing-embeddings/README.html#sentence-embeddings-with-transformers&lt;/a&gt;) 。&lt;/p&gt;&#xA;&lt;p&gt;您可以使用任何 [&#xA;  &lt;a href=&#34;https://huggingface.co/spaces/mteb/leaderboard&#34;&gt;HuggingFace 嵌入模型&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://huggingface.co/spaces/mteb/leaderboard&#34;&gt;https://huggingface.co/spaces/mteb/leaderboard&lt;/a&gt;) 。&lt;/p&gt;&#xA;&lt;p&gt;它使用[&#xA;  &lt;a href=&#34;https://www.sbert.net/docs/pretrained_models.html&#34;&gt;预先训练的&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.sbert.net/docs/pretrained_models.html&#34;&gt;https://www.sbert.net/docs/pretrained_models.html&lt;/a&gt;)变压器模型，序列化为[&#xA;  &lt;a href=&#34;https://onnx.ai/&#34;&gt;开放神经网络交换 (ONNX)&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://onnx.ai/&#34;&gt;https://onnx.ai/&lt;/a&gt;) 格式。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://djl.ai/&#34;&gt;Deep Java 库&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://djl.ai/&#34;&gt;https://djl.ai/&lt;/a&gt;)和 Microsoft [&#xA;  &lt;a href=&#34;https://onnxruntime.ai/docs/get-started/with-java.html&#34;&gt;ONNX Java 运行时&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://onnxruntime.ai/docs/get-started/with-java.html&#34;&gt;https://onnxruntime.ai/docs/get-started/with-java.html&lt;/a&gt;)库用于运行 ONNX 模型并计算 Java 中的嵌入。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;为了在 Java 中运行，我们需要将 Tokenizer 和 Transformer 模型序列化为 &lt;code&gt;ONNX&lt;/code&gt; 格式。&lt;/p&gt;&#xA;&lt;p&gt;使用 [&#xA;  &lt;a href=&#34;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&#34;&gt;optimal-cli&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&#34;&gt;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&lt;/a&gt;) 进行序列化 - 一种快速实现此目的的方法是使用 [&#xA;  &lt;a href=&#34;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&#34;&gt;optimal-cli&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&#34;&gt;https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli&lt;/a&gt;) 命令行工具。以下代码片段准备了一个 Python 虚拟环境，安装了所需的软件包，并使用 &lt;code&gt;optimum-cli&lt;/code&gt; 序列化（例如导出）指定的模型：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ./venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; pip install --upgrade pip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; pip install optimum onnx onnxruntime sentence-transformers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; optimum-cli export onnx --model sentence-transformers/all-MiniLM-L6-v2 onnx-output-folder&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该代码片段将 [&#xA;  &lt;a href=&#34;https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2&#34;&gt;sentence-transformers/all-MiniLM-L6-v2&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://huggingface.co/[sentence-transformers/all-MiniLM-L6-v2]%28https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2%29&#34;&gt;https://huggingface.co/[sentence-transformers/all-MiniLM-L6-v2](https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2)&lt;/a&gt;) 转换器导出到 &lt;code&gt;onnx-output-folder&lt;/code&gt; 文件夹。后者包含嵌入模型使用的 &lt;code&gt;tokenizer.json&lt;/code&gt; 和 &lt;code&gt;model.onnx&lt;/code&gt; 文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAI 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/openai-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/openai-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;openai-嵌入&#34;&gt;&#xA;  OpenAI 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#openai-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI 支持 OpenAI 的文本嵌入模型。OpenAI 的文本嵌入用于衡量文本字符串的相关性。嵌入是一个浮点数向量（列表）。两个向量之间的距离衡量它们的相关性。距离越小，相关性越高；距离越大，相关性越低。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用 OpenAI 创建一个 API 来访问 OpenAI 嵌入模型。&lt;/p&gt;&#xA;&lt;p&gt;在 [&#xA;  &lt;a href=&#34;https://platform.openai.com/signup&#34;&gt;OpenAI 注册页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://platform.openai.com/signup&#34;&gt;https://platform.openai.com/signup&lt;/a&gt;)创建一个帐户，并在 [&#xA;  &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;API 密钥页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;https://platform.openai.com/account/api-keys&lt;/a&gt;)上生成令牌。&lt;/p&gt;&#xA;&lt;p&gt;Spring AI 项目定义了一个名为 &lt;code&gt;spring.ai.openai.api-key&lt;/code&gt; 的配置属性，您应该将其设置为从 openai.com 获取的 &lt;code&gt;API Key&lt;/code&gt; 的值。&lt;/p&gt;&#xA;&lt;p&gt;您可以在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置此配置属性：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.openai.api-key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;your-openai-api-key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了在处理 API 密钥等敏感信息时增强安全性，您可以使用 Spring 表达式语言 (SpEL) 来引用环境变量：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In application.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;openai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;api-key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${OPENAI_API_KEY}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In your environment or .env file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-openai-api-key&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您还可以在应用程序代码中以编程方式设置此配置：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Retrieve API key from a secure source or environment variable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String apiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; System.&lt;span style=&#34;color:#a6e22e&#34;&gt;getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和-bom&#34;&gt;&#xA;  添加存储库和 BOM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8c-bom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 的构件已发布在 Maven Central 和 Spring Snapshot 仓库中。请参阅 [&#xA;  &lt;a href=&#34;../../getting-started.html#artifact-repositories&#34;&gt;“构件仓库”&lt;/a&gt;](../../getting-started.html#artifact-repositories) 部分，将这些仓库添加到您的构建系统中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgresML 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/postgresml-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/postgresml-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;postgresml-嵌入&#34;&gt;&#xA;  PostgresML 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#postgresml-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI 支持 PostgresML 文本嵌入模型。&lt;/p&gt;&#xA;&lt;p&gt;嵌入是文本的数值表示形式。它们用于将单词和句子表示为向量（数字数组）。嵌入可以用来查找相似的文本片段，方法是使用距离度量比较数值向量的相似性；或者，由于大多数算法无法直接使用文本，因此嵌入可以用作其他机器学习模型的输入特征。&lt;/p&gt;&#xA;&lt;p&gt;许多预训练的 LLM 可用于在 PostgresML 中从文本生成嵌入。您可以浏览所有可用的[&#xA;  &lt;a href=&#34;https://huggingface.co/models?library=sentence-transformers&#34;&gt;模型&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://huggingface.co/models?library=sentence-transformers&#34;&gt;https://huggingface.co/models?library=sentence-transformers&lt;/a&gt;) ，在 Hugging Face 上找到最佳解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;添加存储库和-bom&#34;&gt;&#xA;  添加存储库和 BOM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8c-bom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 的构件已发布在 Maven Central 和 Spring Snapshot 仓库中。请参阅 [&#xA;  &lt;a href=&#34;../../getting-started.html#artifact-repositories&#34;&gt;“构件仓库”&lt;/a&gt;](../../getting-started.html#artifact-repositories) 部分，将这些仓库添加到您的构建系统中。&lt;/p&gt;&#xA;&lt;p&gt;为了帮助管理依赖项，Spring AI 提供了 BOM（物料清单），以确保在整个项目中使用一致版本的 Spring AI。请参阅[&#xA;  &lt;a href=&#34;../../getting-started.html#dependency-management&#34;&gt;依赖项管理&lt;/a&gt;](../../getting-started.html#dependency-management)部分，将 Spring AI BOM 添加到您的构建系统中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Azure PostgresML 嵌入模型提供 Spring Boot 自动配置。 Spring AI offers Spring Boot auto-configuration for the Azure PostgresML Embedding Model. 若要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件：To enable it, add the following dependency to your project&amp;rsquo;s Maven &lt;code&gt;pom.xml&lt;/code&gt; file:&lt;/p&gt;</description>
    </item>
    <item>
      <title>千帆嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/%E5%8D%83%E5%B8%86%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/%E5%8D%83%E5%B8%86%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;千帆嵌入&#34;&gt;&#xA;  千帆嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%83%e5%b8%86%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;此功能已移至 Spring AI 社区存储库。&lt;/p&gt;&#xA;&lt;p&gt;请访问 [&#xA;  &lt;a href=&#34;https://github.com/spring-ai-community/qianfan&#34;&gt;github.com/spring-ai-community/qianfan&lt;/a&gt;](https://&#xA;  &lt;a href=&#34;https://github.com/spring-ai-community/qianfan&#34;&gt;github.com/spring-ai-community/qianfan&lt;/a&gt;) 获取最新版本。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ZhiPuAI 嵌入</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/zhipuai-%E5%B5%8C%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E6%A8%A1%E5%9E%8B/%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B-api/zhipuai-%E5%B5%8C%E5%85%A5/</guid>
      <description>&lt;h1 id=&#34;zhipuai-嵌入&#34;&gt;&#xA;  ZhiPuAI 嵌入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#zhipuai-%e5%b5%8c%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI 支持 ZhiPuAI 的文本嵌入模型。ZhiPuAI 的文本嵌入用于衡量文本字符串的相关性。嵌入是一个浮点数向量（列表）。两个向量之间的距离衡量它们的相关性。距离越小，相关性越高；距离越大，相关性越低。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您需要使用 ZhiPuAI 创建一个 API 来访问 ZhiPu AI 语言模型。&lt;/p&gt;&#xA;&lt;p&gt;在[&#xA;  &lt;a href=&#34;https://open.bigmodel.cn/login&#34;&gt;智普 AI 注册页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://open.bigmodel.cn/login&#34;&gt;https://open.bigmodel.cn/login&lt;/a&gt;)创建账号，并在 [&#xA;  &lt;a href=&#34;https://open.bigmodel.cn/usercenter/apikeys&#34;&gt;API Keys 页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://open.bigmodel.cn/usercenter/apikeys&#34;&gt;https://open.bigmodel.cn/usercenter/apikeys&lt;/a&gt;)生成 token。&lt;/p&gt;&#xA;&lt;p&gt;Spring AI 项目定义了一个名为 &lt;code&gt;spring.ai.zhipu.api-key&lt;/code&gt; 的配置属性，您应该将其设置为从 &lt;code&gt;API Key&lt;/code&gt;s 页面获取的 &lt;code&gt;API Key&lt;/code&gt; 的值。&lt;/p&gt;&#xA;&lt;p&gt;您可以在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置此配置属性：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spring.ai.zhipu.api-key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;your-zhipu-api-key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了在处理 API 密钥等敏感信息时增强安全性，您可以使用 Spring 表达式语言 (SpEL) 来引用环境变量：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In application.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ai&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;zhipu&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;api-key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${ZHIPU_API_KEY}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In your environment or .env file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export ZHIPU_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-zhipu-api-key&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您还可以在应用程序代码中以编程方式设置此配置：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Retrieve API key from a secure source or environment variable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String apiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; System.&lt;span style=&#34;color:#a6e22e&#34;&gt;getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZHIPU_API_KEY&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加存储库和-bom&#34;&gt;&#xA;  添加存储库和 BOM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%ad%98%e5%82%a8%e5%ba%93%e5%92%8c-bom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 的构件已发布在 Maven Central 和 Spring Snapshot 仓库中。请参阅 [&#xA;  &lt;a href=&#34;../../getting-started.html#artifact-repositories&#34;&gt;“构件仓库”&lt;/a&gt;](../../getting-started.html#artifact-repositories) 部分，将这些仓库添加到您的构建系统中。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
