<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>矢量数据库 on Spring AI 1.0.0</title>
    <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 矢量数据库 on Spring AI 1.0.0</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure AI 服务</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/azure-ai-%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/azure-ai-%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;h1 id=&#34;azure-ai-服务&#34;&gt;&#xA;  Azure AI 服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-ai-%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;AzureVectorStore&lt;/code&gt; 来存储文档嵌入并使用 Azure AI 搜索服务执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://azure.microsoft.com/en-us/products/ai-services/ai-search/&#34;&gt;Azure AI Search&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://azure.microsoft.com/en-us/products/ai-services/ai-search/&#34;&gt;https://azure.microsoft.com/en-us/products/ai-services/ai-search/&lt;/a&gt;) 是一个多功能的云托管云信息检索系统，是微软更强大的 AI 平台的一部分。除其他功能外，它还允许用户使用基于向量的存储和检索来查询信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;配置&#34;&gt;&#xA;  配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在启动时，如果您选择通过在构造函数中将相关的 &lt;code&gt;initialize-schema&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; 来加入，或者如果使用 Spring Boot，则在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 …​&lt;code&gt;initialize-schema&lt;/code&gt;=&lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;AzureVectorStore&lt;/code&gt; 可以尝试在您的 AI 搜索服务实例中创建一个新索引。&lt;/p&gt;&#xA;&lt;p&gt;或者，您可以手动创建索引。&lt;/p&gt;&#xA;&lt;p&gt;要设置 AzureVectorStore，您将需要从上面的先决条件中检索到的设置以及索引名称：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Azure AI 搜索终结点 Azure AI Search Endpoint&lt;/li&gt;&#xA;&lt;li&gt;Azure AI 搜索键&lt;/li&gt;&#xA;&lt;li&gt;（可选）Azure OpenAI API 端点&lt;/li&gt;&#xA;&lt;li&gt;（可选）Azure OpenAI API 密钥&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;您可以将这些值提供为操作系统环境变量。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export AZURE_AI_SEARCH_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;My AI Search API Key&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export AZURE_AI_SEARCH_ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;My AI Search Index&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;My Azure AI API Key&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Optional&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;依赖项&#34;&gt;&#xA;  依赖项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%be%9d%e8%b5%96%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;将这些依赖项添加到您的项目：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Cosmos DB</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/azure-cosmos-db/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/azure-cosmos-db/</guid>
      <description>&lt;h1 id=&#34;azure-cosmos-db&#34;&gt;&#xA;  Azure Cosmos DB&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-cosmos-db&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;CosmosDBVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-azure-cosmos-db&#34;&gt;&#xA;  什么是 Azure Cosmos DB？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-azure-cosmos-db&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://azure.microsoft.com/en-us/services/cosmos-db/&#34;&gt;Azure Cosmos DB&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://azure.microsoft.com/en-us/services/cosmos-db/&#34;&gt;https://azure.microsoft.com/en-us/services/cosmos-db/&lt;/a&gt;) 是微软专为关键任务应用程序设计的全球分布式云原生数据库服务。它提供高可用性、低延迟以及水平扩展能力，以满足现代应用程序的需求。它从零开始构建，以全球分布、细粒度多租户和水平扩展为核心。它是 Azure 的一项基础服务，被微软全球范围内的大多数关键任务应用程序所使用，包括 Teams、Skype、Xbox Live、Office 365、Bing、Azure Active Directory、Azure Portal、Microsoft Store 等。此外，它还被数千家外部客户所使用，包括 OpenAI 的 ChatGPT 和其他需要弹性扩展、交钥匙全球分布以及全球低延迟和高可用性的关键任务 AI 应用程序。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-diskann&#34;&gt;&#xA;  什么是 DiskANN？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-diskann&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;DiskANN（基于磁盘的近似最近邻搜索）是 Azure Cosmos DB 中使用的一项创新技术，用于增强向量搜索的性能。它通过索引存储在 Cosmos DB 中的嵌入，实现跨高维数据的高效且可扩展的相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;DiskANN 具有以下优势：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;效率 ：通过利用基于磁盘的结构，与传统方法相比，DiskANN 显著减少了查找最近邻居所需的时间。&lt;/li&gt;&#xA;&lt;li&gt;可扩展性 ：它可以处理超出内存容量的大型数据集，使其适用于各种应用，包括机器学习和人工智能驱动的解决方案。&lt;/li&gt;&#xA;&lt;li&gt;低延迟 ：DiskANN 最大限度地减少搜索操作期间的延迟，确保应用程序即使数据量很大也能快速检索结果。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在 Spring AI for Azure Cosmos DB 的环境中，向量搜索将创建并利用 DiskANN 索引来确保相似性查询的最佳性能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用自动配置设置-azure-cosmos-db-矢量存储&#34;&gt;&#xA;  使用自动配置设置 Azure Cosmos DB 矢量存储&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bd%bf%e7%94%a8%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae%e8%ae%be%e7%bd%ae-azure-cosmos-db-%e7%9f%a2%e9%87%8f%e5%ad%98%e5%82%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;以下代码演示了如何使用自动配置设置 &lt;code&gt;CosmosDBVectorStore&lt;/code&gt; ：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apache Cassandra 矢量存储</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/apache-cassandra-%E7%9F%A2%E9%87%8F%E5%AD%98%E5%82%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/apache-cassandra-%E7%9F%A2%E9%87%8F%E5%AD%98%E5%82%A8/</guid>
      <description>&lt;h1 id=&#34;apache-cassandra-矢量存储&#34;&gt;&#xA;  Apache Cassandra 矢量存储&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#apache-cassandra-%e7%9f%a2%e9%87%8f%e5%ad%98%e5%82%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;CassandraVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-apache-cassandra&#34;&gt;&#xA;  什么是 Apache Cassandra？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-apache-cassandra&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://cassandra.apache.org&#34;&gt;Apache Cassandra®&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://cassandra.apache.org&#34;&gt;https://cassandra.apache.org&lt;/a&gt;) 是一个真正的开源分布式数据库，以线性可扩展性、成熟的容错性和低延迟而闻名，使其成为关键任务事务数据的完美平台。&lt;/p&gt;&#xA;&lt;p&gt;其向量相似性搜索 (VSS) 基于 JVector 库，可确保一流的性能和相关性。&lt;/p&gt;&#xA;&lt;p&gt;Apache Cassandra 中的向量搜索非常简单：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; content &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; content_vector ANN &lt;span style=&#34;color:#66d9ef&#34;&gt;OF&lt;/span&gt; query_embedding;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您可以[&#xA;  &lt;a href=&#34;https://cassandra.apache.org/doc/latest/cassandra/getting-started/vector-search-quickstart.html&#34;&gt;在此处&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://cassandra.apache.org/doc/latest/cassandra/getting-started/vector-search-quickstart.html&#34;&gt;https://cassandra.apache.org/doc/latest/cassandra/getting-started/vector-search-quickstart.html&lt;/a&gt;)阅读更多相关文档。&lt;/p&gt;&#xA;&lt;p&gt;这个 Spring AI Vector Store 旨在适用于全新的 RAG 应用程序，并且能够在现有数据和表格的基础上进行改造。&lt;/p&gt;&#xA;&lt;p&gt;该存储还可用于现有数据库中的非 RAG 用例，例如语义搜索、地理邻近搜索等。&lt;/p&gt;&#xA;&lt;p&gt;存储将根据其配置自动创建或增强架构。如果您不想修改架构，请使用 &lt;code&gt;initializeSchema&lt;/code&gt; 配置存储。&lt;/p&gt;&#xA;&lt;p&gt;根据 Spring Boot 标准，使用 spring-boot-autoconfigure 时， &lt;code&gt;initializeSchema&lt;/code&gt; 默认为 &lt;code&gt;false&lt;/code&gt; ，并且您必须通过在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入模式创建/修改。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-jvector&#34;&gt;&#xA;  什么是 JVector？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-jvector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://github.com/jbellis/jvector&#34;&gt;JVector&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://github.com/jbellis/jvector&#34;&gt;https://github.com/jbellis/jvector&lt;/a&gt;) 是一个纯 Java 嵌入式矢量搜索引擎。&lt;/p&gt;&#xA;&lt;p&gt;它与其他 HNSW 向量相似性搜索实现相比，具有以下优势：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;算法快速。JVector 使用受 DiskANN 和相关研究启发的最先进的图形算法，可提供高召回率和低延迟。&lt;/li&gt;&#xA;&lt;li&gt;执行速度快。JVector 使用 Panama SIMD API 来加速索引构建和查询。&lt;/li&gt;&#xA;&lt;li&gt;内存高效。JVector 使用乘积量化来压缩向量，以便它们在搜索期间可以保留在内存中。&lt;/li&gt;&#xA;&lt;li&gt;磁盘感知。JVector 的磁盘布局旨在在查询时执行最少的必要 iops。&lt;/li&gt;&#xA;&lt;li&gt;并发。索引构建线性扩展至至少 32 个线程。线程数加倍，构建时间减半。&lt;/li&gt;&#xA;&lt;li&gt;增量式。在构建索引时进行查询。添加向量和在搜索结果中找到向量之间没有延迟。&lt;/li&gt;&#xA;&lt;li&gt;易于嵌入。API 的设计旨在方便人们在生产环境中嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;依赖项&#34;&gt;&#xA;  依赖项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%be%9d%e8%b5%96%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;将这些依赖项添加到您的项目：&lt;/p&gt;</description>
    </item>
    <item>
      <title>色度</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%89%B2%E5%BA%A6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%89%B2%E5%BA%A6/</guid>
      <description>&lt;h1 id=&#34;色度&#34;&gt;&#xA;  色度&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%89%b2%e5%ba%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 Chroma VectorStore 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://docs.trychroma.com/&#34;&gt;Chroma&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://docs.trychroma.com/&#34;&gt;https://docs.trychroma.com/&lt;/a&gt;) 是一个开源的嵌入数据库。它提供了存储文档嵌入、内容和元数据的工具，并支持搜索这些嵌入，包括元数据过滤。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;启动时，如果尚未配置， &lt;code&gt;ChromaVectorStore&lt;/code&gt; 会创建所需的集合。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Chroma 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-chroma&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-chroma&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向量存储实现可以为您初始化必要的模式，但您必须通过在适当的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;p&gt;以下是所需 bean 的示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; EmbeddingModel &lt;span style=&#34;color:#a6e22e&#34;&gt;embeddingModel&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Can be any other EmbeddingModel implementation.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; OpenAiEmbeddingModel(OpenAiApi.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;apiKey&lt;/span&gt;(System.&lt;span style=&#34;color:#a6e22e&#34;&gt;getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要连接到 Chroma，您需要提供实例的访问详细信息。您可以通过 Spring Boot 的 application.properties 提供简单的配置，&lt;/p&gt;</description>
    </item>
    <item>
      <title>Couchbase</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/couchbase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/couchbase/</guid>
      <description>&lt;h1 id=&#34;couchbase&#34;&gt;&#xA;  Couchbase&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#couchbase&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;CouchbaseSearchVectorStore&lt;/code&gt; 来存储文档嵌入并使用 Couchbase 执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://docs.couchbase.com/server/current/vector-search/vector-search.html&#34;&gt;Couchbase&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://docs.couchbase.com/server/current/vector-search/vector-search.html&#34;&gt;https://docs.couchbase.com/server/current/vector-search/vector-search.html&lt;/a&gt;) 是一个分布式 JSON 文档数据库，具备关系型数据库管理系统 (DBMS) 的所有功能。此外，它还允许用户使用基于向量的存储和检索来查询信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;正在运行的 Couchbase 实例。以下选项可用：Couchbase * [&#xA;  &lt;a href=&#34;https://hub.docker.com/_/couchbase/&#34;&gt;Docker&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://hub.docker.com/_/couchbase/&#34;&gt;https://hub.docker.com/_/couchbase/&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;[&#xA;  &lt;a href=&#34;https://cloud.couchbase.com/&#34;&gt;Capella - Couchbase 即服务&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://cloud.couchbase.com/&#34;&gt;https://cloud.couchbase.com/&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;[&#xA;  &lt;a href=&#34;https://www.couchbase.com/downloads/?family=couchbase-server&#34;&gt;本地安装 Couchbase&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.couchbase.com/downloads/?family=couchbase-server&#34;&gt;https://www.couchbase.com/downloads/?family=couchbase-server&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;[&#xA;  &lt;a href=&#34;https://www.couchbase.com/downloads/?family=open-source-kubernetes&#34;&gt;Couchbase Kubernetes 操作员&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.couchbase.com/downloads/?family=open-source-kubernetes&#34;&gt;https://www.couchbase.com/downloads/?family=open-source-kubernetes&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Couchbase 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-couchbase&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-couchbase-store-spring-boot-starter&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向量存储实现可以使用默认选项为您初始化配置的存储桶、范围、集合和搜索索引，但您必须通过在适当的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;请查看向量存储的[&#xA;  &lt;a href=&#34;../../../#couchbasevector-properties&#34;&gt;配置参数&lt;/a&gt;](#couchbasevector-properties)列表，以了解默认值和配置选项。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;p&gt;现在，您可以将 &lt;code&gt;CouchbaseSearchVectorStore&lt;/code&gt; 自动连接为应用程序中的矢量存储。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt; VectorStore vectorStore;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; documents &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Document(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spring AI rocks!! Spring AI rocks!! Spring AI rocks!! Spring AI rocks!! Spring AI rocks!!&amp;#34;&lt;/span&gt;, Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta1&amp;#34;&lt;/span&gt;)),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Document(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The World is Big and Salvation Lurks Around the Corner&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Document(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You walk forward facing the past and you turn back toward the future.&amp;#34;&lt;/span&gt;, Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta2&amp;#34;&lt;/span&gt;)));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Add the documents to Qdrant&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vectorStore.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(documents);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Retrieve documents similar to a query&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; results &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vectorStore.&lt;span style=&#34;color:#a6e22e&#34;&gt;similaritySearch&lt;/span&gt;(SearchRequest.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spring&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;withTopK&lt;/span&gt;(5));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要连接到 Couchbase 并使用 &lt;code&gt;CouchbaseSearchVectorStore&lt;/code&gt; ，您需要提供实例的访问详细信息。您可以通过 Spring Boot 的 &lt;code&gt;application.properties&lt;/code&gt; 提供配置：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elasticsearch</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/elasticsearch/</guid>
      <description>&lt;h1 id=&#34;elasticsearch&#34;&gt;&#xA;  Elasticsearch&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#elasticsearch&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 Elasticsearch &lt;code&gt;VectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://www.elastic.co/elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.elastic.co/elasticsearch&#34;&gt;https://www.elastic.co/elasticsearch&lt;/a&gt;) 是一个基于 Apache Lucene 库的开源搜索和分析引擎。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;正在运行的 Elasticsearch 实例。以下选项可用：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自管理 Elasticsearch&lt;/li&gt;&#xA;&lt;li&gt;弹性云&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Elasticsearch 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 或 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件中：&lt;/p&gt;&#xA;&lt;p&gt;向量存储实现可以为您初始化必要的模式，但您必须通过在相应的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择启用。或者，您可以选择退出初始化，并使用 Elasticsearch 客户端手动创建索引，如果索引需要高级映射或其他配置，这种方法会很有用。&lt;/p&gt;&#xA;&lt;p&gt;请查看向量存储的[&#xA;  &lt;a href=&#34;../../../#elasticsearchvector-properties&#34;&gt;配置参数&lt;/a&gt;](#elasticsearchvector-properties)列表，了解默认值和配置选项。您也可以通过配置 &lt;code&gt;ElasticsearchVectorStoreOptions&lt;/code&gt; bean 来设置这些属性。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;p&gt;现在，您可以将 &lt;code&gt;ElasticsearchVectorStore&lt;/code&gt; 自动连接为应用程序中的向量存储。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt; VectorStore vectorStore;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; documents &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; List.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Document(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spring AI rocks!! Spring AI rocks!! Spring AI rocks!! Spring AI rocks!! Spring AI rocks!!&amp;#34;&lt;/span&gt;, Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta1&amp;#34;&lt;/span&gt;)),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Document(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The World is Big and Salvation Lurks Around the Corner&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Document(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You walk forward facing the past and you turn back toward the future.&amp;#34;&lt;/span&gt;, Map.&lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta2&amp;#34;&lt;/span&gt;)));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Add the documents to Elasticsearch&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vectorStore.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(documents);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Retrieve documents similar to a query&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; results &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vectorStore&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;similaritySearch&lt;/span&gt;(SearchRequest.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spring&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;topK&lt;/span&gt;(5).&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要连接到 Elasticsearch 并使用 &lt;code&gt;ElasticsearchVectorStore&lt;/code&gt; ，您需要提供实例的访问详细信息。您可以通过 Spring Boot 的 &lt;code&gt;application.yml&lt;/code&gt; 提供简单的配置，&lt;/p&gt;</description>
    </item>
    <item>
      <title>GemFire 矢量商店</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/gemfire-%E7%9F%A2%E9%87%8F%E5%95%86%E5%BA%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/gemfire-%E7%9F%A2%E9%87%8F%E5%95%86%E5%BA%97/</guid>
      <description>&lt;h1 id=&#34;gemfire-矢量商店&#34;&gt;&#xA;  GemFire 矢量商店&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#gemfire-%e7%9f%a2%e9%87%8f%e5%95%86%e5%ba%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;GemFireVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://tanzu.vmware.com/gemfire&#34;&gt;GemFire&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://tanzu.vmware.com/gemfire&#34;&gt;https://tanzu.vmware.com/gemfire&lt;/a&gt;) 是一个分布式内存键值存储系统，能够以极快的速度执行读写操作。它提供高可用性的并行消息队列、持续可用性以及事件驱动的架构，让您能够动态扩展而无需停机。随着您的数据规模需求不断增长以支持高性能实时应用，[&#xA;  &lt;a href=&#34;https://tanzu.vmware.com/gemfire&#34;&gt;GemFire&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://tanzu.vmware.com/gemfire&#34;&gt;https://tanzu.vmware.com/gemfire&lt;/a&gt;) 可以轻松实现线性扩展。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://docs.vmware.com/en/VMware-GemFire-VectorDB/1.0/gemfire-vectordb/overview.html&#34;&gt;GemFire VectorDB&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://docs.vmware.com/en/VMware-GemFire-VectorDB/1.0/gemfire-vectordb/overview.html&#34;&gt;https://docs.vmware.com/en/VMware-GemFire-VectorDB/1.0/gemfire-vectordb/overview.html&lt;/a&gt;) 扩展了 GemFire 的功能，作为一个多功能矢量数据库，可以高效地存储、检索和执行矢量相似性搜索。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;将 GemFire VectorStore Spring Boot 启动器添加到项目的 Maven 构建文件 &lt;code&gt;pom.xml&lt;/code&gt; ：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-gemfire&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &amp;#39;org.springframework.ai:spring-ai-starter-vector-store-gemfire&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置属性&#34;&gt;&#xA;  配置属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您可以在 Spring Boot 配置中使用以下属性来进一步配置 &lt;code&gt;GemFireVectorStore&lt;/code&gt; 。&lt;/p&gt;&#xA;&lt;h2 id=&#34;手动配置&#34;&gt;&#xA;  手动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%8b%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;如果只使用 &lt;code&gt;GemFireVectorStore&lt;/code&gt; 而不使用 Spring Boot 的自动配置，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-gemfire-store&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于 Gradle 用户，请将以下内容添加到 &lt;code&gt;build.gradle&lt;/code&gt; 文件的依赖项块下，以便仅使用 &lt;code&gt;GemFireVectorStore&lt;/code&gt; ：&lt;/p&gt;</description>
    </item>
    <item>
      <title>MariaDB 向量存储</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/mariadb-%E5%90%91%E9%87%8F%E5%AD%98%E5%82%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/mariadb-%E5%90%91%E9%87%8F%E5%AD%98%E5%82%A8/</guid>
      <description>&lt;h1 id=&#34;mariadb-向量存储&#34;&gt;&#xA;  MariaDB 向量存储&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mariadb-%e5%90%91%e9%87%8f%e5%ad%98%e5%82%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;MariaDBVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://mariadb.org/projects/mariadb-vector/&#34;&gt;MariaDB Vector&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://mariadb.org/projects/mariadb-vector/&#34;&gt;https://mariadb.org/projects/mariadb-vector/&lt;/a&gt;) 是 MariaDB 11.7 的一部分，支持存储和搜索机器学习生成的嵌入。它使用向量索引提供高效的向量相似性搜索功能，支持余弦相似度和欧氏距离度量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一个正在运行的 MariaDB (11.7+) 实例。以下选项可用：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker 镜像&lt;/li&gt;&#xA;&lt;li&gt;MariaDB 服务器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Docker 镜像&lt;/li&gt;&#xA;&lt;li&gt;MariaDB 服务器&lt;/li&gt;&#xA;&lt;li&gt;如果需要，可以使用 EmbeddingModel 的 API 密钥来生成 MariaDBVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 MariaDB 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-mariadb&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-mariadb&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向量存储实现可以为您初始化所需的模式，但您必须通过在适当的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Milvus</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/milvus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/milvus/</guid>
      <description>&lt;h1 id=&#34;milvus&#34;&gt;&#xA;  Milvus&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#milvus&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://milvus.io/&#34;&gt;Milvus&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://milvus.io/&#34;&gt;https://milvus.io/&lt;/a&gt;) 是一个开源向量数据库，在数据科学和机器学习领域备受关注。其突出特点之一在于对向量索引和查询的强大支持。[&#xA;  &lt;a href=&#34;https://milvus.io/&#34;&gt;Milvus&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://milvus.io/&#34;&gt;https://milvus.io/&lt;/a&gt;) 采用先进的尖端算法来加速搜索过程，即使在处理海量数据集时，也能高效地检索相似的向量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正在运行的 Milvus 实例。有以下选项可供选择：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Milvus 单机版 ：Docker、Operator、Helm、DEB/RPM、Docker Compose。&lt;/li&gt;&#xA;&lt;li&gt;Milvus Cluster ：操作员、Helm。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Milvus 单机版 ：Docker、Operator、Helm、DEB/RPM、Docker Compose。&lt;/li&gt;&#xA;&lt;li&gt;Milvus Cluster ：操作员、Helm。&lt;/li&gt;&#xA;&lt;li&gt;如果需要， EmbeddingModel 的 API 密钥可以生成 MilvusVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;依赖项&#34;&gt;&#xA;  依赖项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%be%9d%e8%b5%96%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;然后将 Milvus VectorStore 启动启动器依赖项添加到您的项目中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-milvus&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-milvus&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向量存储实现可以为您初始化必要的模式，但您必须通过在适当的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;Vector Store 还需要一个 &lt;code&gt;EmbeddingModel&lt;/code&gt; 实例来计算文档的嵌入。你可以从可用的 &lt;code&gt;EmbeddingModel&lt;/code&gt; 实现中选择一个。&lt;/p&gt;&#xA;&lt;p&gt;要连接并配置 &lt;code&gt;MilvusVectorStore&lt;/code&gt; ，您需要提供实例的访问详细信息。您可以通过 Spring Boot 的 &lt;code&gt;application.yml&lt;/code&gt; 提供简单的配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Atlas</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/mongodb-atlas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/mongodb-atlas/</guid>
      <description>&lt;h1 id=&#34;mongodb-atlas&#34;&gt;&#xA;  MongoDB Atlas&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mongodb-atlas&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您将 MongoDB Atlas 设置为矢量存储以与 Spring AI 一起使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-mongodb-atlas&#34;&gt;&#xA;  什么是 MongoDB Atlas？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-mongodb-atlas&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://www.mongodb.com/products/platform/atlas-database&#34;&gt;MongoDB Atlas&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.mongodb.com/products/platform/atlas-database&#34;&gt;https://www.mongodb.com/products/platform/atlas-database&lt;/a&gt;) 是 MongoDB 推出的完全托管云数据库，可在 AWS、Azure 和 GCP 上使用。Atlas 支持对 MongoDB 文档数据进行原生向量搜索和全文搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://www.mongodb.com/products/platform/atlas-vector-search&#34;&gt;MongoDB Atlas 向量搜索&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.mongodb.com/products/platform/atlas-vector-search&#34;&gt;https://www.mongodb.com/products/platform/atlas-vector-search&lt;/a&gt;)允许您将向量嵌入存储在 MongoDB 文档中，创建向量搜索索引，并使用近似最近邻算法（分层可导航小世界）执行 KNN 搜索。您可以在 MongoDB 聚合阶段使用 &lt;code&gt;$vectorSearch&lt;/code&gt; 聚合运算符对向量嵌入执行搜索。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;运行 MongoDB 6.0.11、7.0.2 或更高版本的 Atlas 集群。要开始使用 MongoDB Atlas，您可以按照此处的说明操作。确保您的 IP 地址包含在 Atlas 项目的访问列表中。&lt;/li&gt;&#xA;&lt;li&gt;正在运行且启用了向量搜索的 MongoDB Atlas 实例&lt;/li&gt;&#xA;&lt;li&gt;配置了向量搜索索引的集合&lt;/li&gt;&#xA;&lt;li&gt;具有 id（字符串）、内容（字符串）、元数据（文档）和嵌入（向量）字段的集合架构&lt;/li&gt;&#xA;&lt;li&gt;索引和集合操作的适当访问权限&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 MongoDB Atlas 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Neo4j</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/neo4j/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/neo4j/</guid>
      <description>&lt;h1 id=&#34;neo4j&#34;&gt;&#xA;  Neo4j&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#neo4j&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;Neo4jVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://neo4j.com&#34;&gt;Neo4j&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://neo4j.com&#34;&gt;https://neo4j.com&lt;/a&gt;) 是一个开源 NoSQL 图形数据库。它是一个完全事务性 (ACID) 数据库，以图的形式存储数据，这些图由节点组成，并通过关系连接。受现实世界结构的启发，它能够对复杂数据提供高性能查询，同时保持开发人员的直观和简单。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://neo4j.com/docs/cypher-manual/current/indexes-for-vector-search/&#34;&gt;Neo4j 的向量搜索&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://neo4j.com/docs/cypher-manual/current/indexes-for-vector-search/&#34;&gt;https://neo4j.com/docs/cypher-manual/current/indexes-for-vector-search/&lt;/a&gt;)功能允许用户从大型数据集中查询向量嵌入。嵌入是数据对象（例如文本、图像、音频或文档）的数值表示。嵌入可以存储在节点属性中，并可使用 &lt;code&gt;db.index.vector.queryNodes()&lt;/code&gt; 函数进行查询。这些索引由 Lucene 提供支持，它使用分层可导航小世界图 (HNSW) 对向量场执行 k-ANN 近似最近邻 (k-ANN) 查询。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正在运行的 Neo4j (5.15+) 实例。以下选项可用：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker 镜像&lt;/li&gt;&#xA;&lt;li&gt;Neo4j 桌面&lt;/li&gt;&#xA;&lt;li&gt;Neo4j 服务器实例&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Docker 镜像&lt;/li&gt;&#xA;&lt;li&gt;Neo4j 桌面&lt;/li&gt;&#xA;&lt;li&gt;Neo4j 服务器实例&lt;/li&gt;&#xA;&lt;li&gt;如果需要，可以使用 EmbeddingModel 的 API 密钥来生成 Neo4jVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Neo4j 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-neo4j&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开放搜索</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%BC%80%E6%94%BE%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%BC%80%E6%94%BE%E6%90%9C%E7%B4%A2/</guid>
      <description>&lt;h1 id=&#34;开放搜索&#34;&gt;&#xA;  开放搜索&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%80%e6%94%be%e6%90%9c%e7%b4%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;OpenSearchVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://opensearch.org&#34;&gt;OpenSearch&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://opensearch.org&#34;&gt;https://opensearch.org&lt;/a&gt;) 是一个开源搜索和分析引擎，最初由 Elasticsearch 分叉而来，遵循 Apache 2.0 许可证发行。它通过简化 AI 生成资产的集成和管理来增强 AI 应用程序开发。[&#xA;  &lt;a href=&#34;https://opensearch.org&#34;&gt;OpenSearch&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://opensearch.org&#34;&gt;https://opensearch.org&lt;/a&gt;) 支持向量、词汇和混合搜索功能，并利用高级向量数据库功能实现低延迟查询和相似性搜索，详情请参阅[&#xA;  &lt;a href=&#34;https://opensearch.org/platform/search/vector-database.html&#34;&gt;向量数据库页面&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://opensearch.org/platform/search/vector-database.html&#34;&gt;https://opensearch.org/platform/search/vector-database.html&lt;/a&gt;) 。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://opensearch.org/docs/latest/search-plugins/knn/index/&#34;&gt;OpenSearch k-NN&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://opensearch.org/docs/latest/search-plugins/knn/index/&#34;&gt;https://opensearch.org/docs/latest/search-plugins/knn/index/&lt;/a&gt;) 功能允许用户从大型数据集中查询向量嵌入。嵌入是数据对象（例如文本、图像、音频或文档）的数值表示。嵌入可以存储在索引中，并使用各种相似度函数进行查询。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正在运行的 OpenSearch 实例。有以下选项可用：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自主管理的 OpenSearch&lt;/li&gt;&#xA;&lt;li&gt;亚马逊开放搜索服务&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;自主管理的 OpenSearch&lt;/li&gt;&#xA;&lt;li&gt;亚马逊开放搜索服务&lt;/li&gt;&#xA;&lt;li&gt;如果需要，可以使用 EmbeddingModel 的 API 密钥来生成 OpenSearchVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 OpenSearch 向量存储提供了 Spring Boot 自动配置功能。要启用此功能，请在项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中添加以下依赖项：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-opensearch&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-opensearch&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于 Amazon OpenSearch Service，请改用以下依赖项：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle Database 23ai - AI 向量搜索</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/oracle-database-23ai---ai-%E5%90%91%E9%87%8F%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/oracle-database-23ai---ai-%E5%90%91%E9%87%8F%E6%90%9C%E7%B4%A2/</guid>
      <description>&lt;h1 id=&#34;oracle-database-23ai---ai-向量搜索&#34;&gt;&#xA;  Oracle Database 23ai - AI 向量搜索&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#oracle-database-23ai---ai-%e5%90%91%e9%87%8f%e6%90%9c%e7%b4%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Oracle Database 23ai（23.4+）的 [&#xA;  &lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/23/vecse/overview-ai-vector-search.html&#34;&gt;AI 向量搜索&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/23/vecse/overview-ai-vector-search.html&#34;&gt;https://docs.oracle.com/en/database/oracle/oracle-database/23/vecse/overview-ai-vector-search.html&lt;/a&gt;)功能现已作为 Spring AI &lt;code&gt;VectorStore&lt;/code&gt; 提供，可帮助您存储文档嵌入并执行相似性搜索。当然，所有其他功能也均可使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;首先将 Oracle Vector Store 启动程序依赖项添加到您的项目中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-oracle&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-oracle&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您需要此向量存储为您初始化模式，那么您需要在适当的构造函数中为 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔参数传递 true，或者在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 。&lt;/p&gt;&#xA;&lt;p&gt;Vector Store 还需要一个 &lt;code&gt;EmbeddingModel&lt;/code&gt; 实例来计算文档的嵌入。你可以从可用的 &lt;code&gt;EmbeddingModel&lt;/code&gt; 实现中选择一个。&lt;/p&gt;&#xA;&lt;p&gt;例如，要使用 [&#xA;  &lt;a href=&#34;../embeddings/openai-embeddings.html&#34;&gt;OpenAI EmbeddingModel，&lt;/a&gt;](../embeddings/openai-embeddings.html) 请将以下依赖项添加到您的项目：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-model-openai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-model-openai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要连接并配置 &lt;code&gt;OracleVectorStore&lt;/code&gt; ，您需要提供数据库的访问详细信息。您可以通过 Spring Boot 的 &lt;code&gt;application.yml&lt;/code&gt; 提供简单的配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PG 载体</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/pg-%E8%BD%BD%E4%BD%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/pg-%E8%BD%BD%E4%BD%93/</guid>
      <description>&lt;h1 id=&#34;pg-载体&#34;&gt;&#xA;  PG 载体&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pg-%e8%bd%bd%e4%bd%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 PGvector &lt;code&gt;VectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;PGvector&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;https://github.com/pgvector/pgvector&lt;/a&gt;) 是 PostgreSQL 的一个开源扩展，支持存储和搜索机器学习生成的嵌入。它提供了多种功能，让用户能够识别精确和近似的最近邻。它旨在与其他 PostgreSQL 功能（包括索引和查询）无缝协作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;首先，您需要访问启用了 &lt;code&gt;vector&lt;/code&gt; 、 &lt;code&gt;hstore&lt;/code&gt; 和 &lt;code&gt;uuid-ossp&lt;/code&gt; 扩展的 PostgreSQL 实例。&lt;/p&gt;&#xA;&lt;p&gt;启动时， &lt;code&gt;PgVectorStore&lt;/code&gt; 将尝试安装所需的数据库扩展，并创建带有索引的所需 &lt;code&gt;vector_store&lt;/code&gt; 表（如果不存在）。&lt;/p&gt;&#xA;&lt;p&gt;或者，您可以像这样手动执行此操作：&lt;/p&gt;&#xA;&lt;p&gt;接下来，如果需要， [&#xA;  &lt;a href=&#34;../embeddings.html#available-implementations&#34;&gt;EmbeddingModel&lt;/a&gt;](../embeddings.html#available-implementations) 的 API 密钥可以生成 &lt;code&gt;PgVectorStore&lt;/code&gt; 存储的嵌入。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;然后将 PgVectorStore 启动程序依赖项添加到您的项目中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-pgvector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-pgvector&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向量存储实现可以为您初始化所需的模式，但您必须通过在适当的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;Vector Store 还需要一个 &lt;code&gt;EmbeddingModel&lt;/code&gt; 实例来计算文档的嵌入。您可以从可用的 &lt;code&gt;EmbeddingModel&lt;/code&gt; 实现中选择一个。&lt;/p&gt;</description>
    </item>
    <item>
      <title>松果</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%9D%BE%E6%9E%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%9D%BE%E6%9E%9C/</guid>
      <description>&lt;h1 id=&#34;松果&#34;&gt;&#xA;  松果&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9d%be%e6%9e%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 Pinecone &lt;code&gt;VectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://www.pinecone.io/&#34;&gt;Pinecone&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.pinecone.io/&#34;&gt;https://www.pinecone.io/&lt;/a&gt;) 是一个流行的基于云的矢量数据库，它允许您高效地存储和搜索矢量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要设置 &lt;code&gt;PineconeVectorStore&lt;/code&gt; ，请从您的 Pinecone 帐户收集以下详细信息：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pinecone API 密钥&lt;/li&gt;&#xA;&lt;li&gt;松果索引名称&lt;/li&gt;&#xA;&lt;li&gt;Pinecone 命名空间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Pinecone 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-pinecone&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-pinecone&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;p&gt;以下是所需 bean 的示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; EmbeddingModel &lt;span style=&#34;color:#a6e22e&#34;&gt;embeddingModel&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Can be any other EmbeddingModel implementation.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; OpenAiEmbeddingModel(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; OpenAiApi(System.&lt;span style=&#34;color:#a6e22e&#34;&gt;getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span&gt;)));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要连接到 Pinecone，您需要提供实例的访问详细信息。您可以通过 Spring Boot 的 application.properties 提供简单的配置，&lt;/p&gt;</description>
    </item>
    <item>
      <title>卡德兰特</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%8D%A1%E5%BE%B7%E5%85%B0%E7%89%B9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%8D%A1%E5%BE%B7%E5%85%B0%E7%89%B9/</guid>
      <description>&lt;h1 id=&#34;卡德兰特&#34;&gt;&#xA;  卡德兰特&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%a1%e5%be%b7%e5%85%b0%e7%89%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 Qdrant &lt;code&gt;VectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://www.qdrant.tech/&#34;&gt;Qdrant&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://www.qdrant.tech/&#34;&gt;https://www.qdrant.tech/&lt;/a&gt;) 是一款开源的高性能向量搜索引擎/数据库。它采用 HNSW（分层可导航小世界）算法进行高效的 k-NN 搜索操作，并为基于元数据的查询提供高级过滤功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Qdrant 实例：按照 Qdrant 文档中的安装说明设置 Qdrant 实例。&lt;/li&gt;&#xA;&lt;li&gt;如果需要， EmbeddingModel 的 API 密钥可以生成 QdrantVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Qdrant 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-qdrant&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-qdrant&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请查看向量存储的[&#xA;  &lt;a href=&#34;../../../#qdrant-vectorstore-properties&#34;&gt;配置参数&lt;/a&gt;](#qdrant-vectorstore-properties)列表，以了解默认值和配置选项。&lt;/p&gt;&#xA;&lt;p&gt;向量存储实现可以为您初始化必要的模式，但您必须通过在构建器中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;p&gt;现在您可以将 &lt;code&gt;QdrantVectorStore&lt;/code&gt; 自动连接为应用程序中的矢量存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/redis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/redis/</guid>
      <description>&lt;h1 id=&#34;redis&#34;&gt;&#xA;  Redis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;RedisVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://redis.io&#34;&gt;Redis&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://redis.io&#34;&gt;https://redis.io&lt;/a&gt;) 是一个开源（BSD 许可）的内存数据结构存储，可用作数据库、缓存、消息代理和流引擎。[&#xA;  &lt;a href=&#34;https://redis.io&#34;&gt;Redis&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://redis.io&#34;&gt;https://redis.io&lt;/a&gt;) 提供多种数据结构，例如字符串、哈希、列表、集合、支持范围查询的有序集合、位图、超日志、地理空间索引和流。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://redis.io/docs/interact/search-and-query/&#34;&gt;Redis Search 和 Query&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://redis.io/docs/interact/search-and-query/&#34;&gt;https://redis.io/docs/interact/search-and-query/&lt;/a&gt;) 扩展了 Redis OSS 的核心功能，并允许您使用 Redis 作为矢量数据库：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将向量和相关元数据存储在哈希或 JSON 文档中&lt;/li&gt;&#xA;&lt;li&gt;检索向量&lt;/li&gt;&#xA;&lt;li&gt;执行向量搜索&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Redis 矢量存储提供了 Spring Boot 自动配置功能。要启用此功能，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-redis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-redis&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向量存储实现可以为您初始化必要的模式，但您必须通过在适当的构造函数中指定 &lt;code&gt;initializeSchema&lt;/code&gt; 布尔值或在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;请查看向量存储的[&#xA;  &lt;a href=&#34;../../../#redisvector-properties&#34;&gt;配置参数&lt;/a&gt;](#redisvector-properties)列表，以了解默认值和配置选项。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;p&gt;现在，您可以将 &lt;code&gt;RedisVectorStore&lt;/code&gt; 自动连接为应用程序中的矢量存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SAP HANA 云</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/sap-hana-%E4%BA%91/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/sap-hana-%E4%BA%91/</guid>
      <description>&lt;h1 id=&#34;sap-hana-云&#34;&gt;&#xA;  SAP HANA 云&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sap-hana-%e4%ba%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;您需要一个 SAP HANA Cloud 矢量引擎帐户 - 请参阅 SAP HANA Cloud 矢量引擎 - 提供试用帐户指南来创建试用帐户。&lt;/li&gt;&#xA;&lt;li&gt;如果需要， EmbeddingModel 的 API 密钥可以生成向量存储所存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 没有为 SAP Hana 向量存储提供专用模块。用户需要使用 Spring AI 中 SAP Hana 向量存储的标准向量存储模块 &lt;code&gt;spring-ai-hanadb-store&lt;/code&gt; 在应用程序中自行配置。&lt;/p&gt;&#xA;&lt;p&gt;请查看矢量存储的 [&#xA;  &lt;a href=&#34;../../../#hanacloudvectorstore-properties&#34;&gt;HanaCloudVectorStore 属性&lt;/a&gt;](#hanacloudvectorstore-properties)列表，以了解默认值和配置选项。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;&#xA;&lt;h2 id=&#34;hanacloudvectorstore-属性&#34;&gt;&#xA;  HanaCloudVectorStore 属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hanacloudvectorstore-%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;您可以在 Spring Boot 配置中使用以下属性来自定义 SAP Hana 矢量存储。它使用 &lt;code&gt;spring.datasource.&lt;/code&gt; 属性来配置 Hana 数据源和 &lt;code&gt;spring.ai.vectorstore.hanadb.&lt;/code&gt; 属性来配置 Hana 矢量存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typesense</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/typesense/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/typesense/</guid>
      <description>&lt;h1 id=&#34;typesense&#34;&gt;&#xA;  Typesense&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#typesense&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 &lt;code&gt;TypesenseVectorStore&lt;/code&gt; 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://typesense.org&#34;&gt;Typesense&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://typesense.org&#34;&gt;https://typesense.org&lt;/a&gt;) 是一款开源的拼写错误容忍搜索引擎，它针对 50 毫秒内的即时搜索进行了优化，同时提供了直观的开发者体验。它提供向量搜索功能，允许您在常规搜索数据的同时存储和查询高维向量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正在运行的 Typesense 实例。以下选项可用：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Typesense Cloud （推荐）&lt;/li&gt;&#xA;&lt;li&gt;Docker 镜像 typesense/typesense:latest&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Typesense Cloud （推荐）&lt;/li&gt;&#xA;&lt;li&gt;Docker 镜像 typesense/typesense:latest&lt;/li&gt;&#xA;&lt;li&gt;如果需要， EmbeddingModel 的 API 密钥可以生成 TypesenseVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动配置&#34;&gt;&#xA;  自动配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e5%8a%a8%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Spring AI 为 Typesense 矢量存储提供了 Spring Boot 自动配置。要启用它，请将以下依赖项添加到项目的 Maven &lt;code&gt;pom.xml&lt;/code&gt; 文件中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-starter-vector-store-typesense&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-starter-vector-store-typesense&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请查看向量存储的[&#xA;  &lt;a href=&#34;../../../#_configuration_properties&#34;&gt;配置参数&lt;/a&gt;](#_configuration_properties)列表，以了解默认值和配置选项。&lt;/p&gt;&#xA;&lt;p&gt;向量存储实现可以为您初始化必要的模式，但您必须通过在 &lt;code&gt;application.properties&lt;/code&gt; 文件中设置 &lt;code&gt;…​initialize-schema=true&lt;/code&gt; 来选择加入。&lt;/p&gt;&#xA;&lt;p&gt;此外，您还需要一个已配置的 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; bean。有关更多信息，请参阅 &lt;code&gt;[[EmbeddingModel](../embeddings.html#available-implementations)](../embeddings.html#available-implementations)&lt;/code&gt; 部分。&lt;/p&gt;</description>
    </item>
    <item>
      <title>威维特</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%A8%81%E7%BB%B4%E7%89%B9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%A8%81%E7%BB%B4%E7%89%B9/</guid>
      <description>&lt;h1 id=&#34;威维特&#34;&gt;&#xA;  威维特&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a8%81%e7%bb%b4%e7%89%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;本节将引导您设置 Weaviate VectorStore 来存储文档嵌入并执行相似性搜索。&lt;/p&gt;&#xA;&lt;p&gt;[&#xA;  &lt;a href=&#34;https://weaviate.io/&#34;&gt;Weaviate&lt;/a&gt;](&#xA;  &lt;a href=&#34;https://weaviate.io/&#34;&gt;https://weaviate.io/&lt;/a&gt;) 是一个开源向量数据库，它允许您存储来自您常用的 ML 模型的数据对象和向量嵌入，并无缝扩展到数十亿个数据对象。它提供了用于存储文档嵌入、内容和元数据的工具，并支持搜索这些嵌入，包括元数据过滤。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;&#xA;  先决条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正在运行的 Weaviate 实例。以下选项可用：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Weaviate 云服务 （需要创建帐户和 API 密钥）&lt;/li&gt;&#xA;&lt;li&gt;Docker 容器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Weaviate 云服务 （需要创建帐户和 API 密钥）&lt;/li&gt;&#xA;&lt;li&gt;Docker 容器&lt;/li&gt;&#xA;&lt;li&gt;如果需要，可以使用 EmbeddingModel 的 API 密钥来生成 WeaviateVectorStore 存储的嵌入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;依赖项&#34;&gt;&#xA;  依赖项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%be%9d%e8%b5%96%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;将 Weaviate Vector Store 依赖项添加到您的项目：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.ai&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-ai-weaviate-store&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者到你的 Gradle &lt;code&gt;build.gradle&lt;/code&gt; 构建文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    implementation &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.springframework.ai:spring-ai-weaviate-store&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置&#34;&gt;&#xA;  配置&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;要连接到 Weaviate 并使用 &lt;code&gt;WeaviateVectorStore&lt;/code&gt; ，您需要提供实例的访问详细信息。可以通过 Spring Boot 的 application.properties 提供配置：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
