<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>聊天客户端 API on Spring AI 1.0.0</title>
    <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E8%81%8A%E5%A4%A9%E5%AE%A2%E6%88%B7%E7%AB%AF-api/</link>
    <description>Recent content in 聊天客户端 API on Spring AI 1.0.0</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E8%81%8A%E5%A4%A9%E5%AE%A2%E6%88%B7%E7%AB%AF-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>顾问 API</title>
      <link>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E8%81%8A%E5%A4%A9%E5%AE%A2%E6%88%B7%E7%AB%AF-api/%E9%A1%BE%E9%97%AE-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E5%8F%82%E8%80%83/%E8%81%8A%E5%A4%A9%E5%AE%A2%E6%88%B7%E7%AB%AF-api/%E9%A1%BE%E9%97%AE-api/</guid>
      <description>&lt;h1 id=&#34;顾问-api&#34;&gt;&#xA;  顾问 API&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a1%be%e9%97%ae-api&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Spring AI Advisors API 提供了一种灵活而强大的方法来拦截、修改和增强 Spring 应用程序中的 AI 驱动交互。通过利用 Advisors API，开发人员可以创建更复杂、可重用且更易于维护的 AI 组件。&lt;/p&gt;&#xA;&lt;p&gt;主要优势包括封装重复的生成式 AI 模式、转换发送到和来自大型语言模型 (LLM) 的数据，以及提供跨各种模型和用例的可移植性。&lt;/p&gt;&#xA;&lt;p&gt;您可以使用 [&#xA;  &lt;a href=&#34;chatclient.html#_advisor_configuration_in_chatclient&#34;&gt;ChatClient API&lt;/a&gt;](chatclient.html#_advisor_configuration_in_chatclient) 配置现有的顾问，如以下示例所示：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; chatClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ChatClient.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;(chatModel)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;defaultAdvisors&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        MessageChatMemoryAdvisor.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;(chatMemory).&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;(), &lt;span style=&#34;color:#75715e&#34;&gt;// chat-memory advisor&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        QuestionAnswerAdvisor.&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;((vectorStore).&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;// RAG advisor&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; conversationId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;678&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;chatClient&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Set advisor parameters at runtime&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;advisors&lt;/span&gt;(advisor &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; advisor.&lt;span style=&#34;color:#a6e22e&#34;&gt;param&lt;/span&gt;(ChatMemory.&lt;span style=&#34;color:#a6e22e&#34;&gt;CONVERSATION_ID&lt;/span&gt;, conversationId))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;(userText)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;建议在构建时使用构建器的 &lt;code&gt;defaultAdvisors()&lt;/code&gt; 方法注册顾问。&lt;/p&gt;&#xA;&lt;p&gt;顾问也参与可观察性堆栈，因此您可以查看与其执行相关的指标和跟踪。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;了解问答顾问&lt;/li&gt;&#xA;&lt;li&gt;了解聊天记忆顾问&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;核心组件&#34;&gt;&#xA;  核心组件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b8%e5%bf%83%e7%bb%84%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;该 API 包含用于非流式场景的 &lt;code&gt;CallAroundAdvisor&lt;/code&gt; 和 &lt;code&gt;CallAroundAdvisor&lt;/code&gt;Chain ，以及用于流式场景的 &lt;code&gt;StreamAroundAdvisor&lt;/code&gt; 和 &lt;code&gt;StreamAroundAdvisor&lt;/code&gt;Chain 。此外，它还包含用于表示未密封 Prompt 请求的 &lt;code&gt;AdvisedRequest&lt;/code&gt; 和用于表示聊天完成响应的 &lt;code&gt;AdvisedResponse&lt;/code&gt; 。两者都包含一个 &lt;code&gt;advise-context&lt;/code&gt; 用于在顾问链之间共享状态。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
