<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>检索增强生成 on Spring AI 1.0.0</title>
    <link>https://studyllm.github.io/docs/%E6%A3%80%E7%B4%A2%E5%A2%9E%E5%BC%BA%E7%94%9F%E6%88%90rag/</link>
    <description>Recent content in 检索增强生成 on Spring AI 1.0.0</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://studyllm.github.io/docs/%E6%A3%80%E7%B4%A2%E5%A2%9E%E5%BC%BA%E7%94%9F%E6%88%90rag/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ETL管道</title>
      <link>https://studyllm.github.io/docs/%E6%A3%80%E7%B4%A2%E5%A2%9E%E5%BC%BA%E7%94%9F%E6%88%90rag/etl%E7%AE%A1%E9%81%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://studyllm.github.io/docs/%E6%A3%80%E7%B4%A2%E5%A2%9E%E5%BC%BA%E7%94%9F%E6%88%90rag/etl%E7%AE%A1%E9%81%93/</guid>
      <description>&lt;h1 id=&#34;etl管道&#34;&gt;&#xA;  ETL管道&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#etl%e7%ae%a1%e9%81%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;提取、转换和加载（ETL）框架在检索增强生成（RAG）用例中充当数据处理的主干。&#xA;ETL管道编排从原始数据源到结构化向量存储的流，确保数据处于人工智能模型检索的最佳格式。&#xA;RAG用例是一种文本，通过从数据体中检索相关信息来增强生成模型的能力，以提高生成输出的质量和相关性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;api概述&#34;&gt;&#xA;  API概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#api%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;ETL管道创建、转换和存储文档实例。&#xA;&#xA;  &lt;img src=&#34;../../images/spring-ai-document1-api.jpg&#34; alt=&#34;春季AI消息API&#34; /&gt;&#xA;&lt;code&gt;Document&lt;/code&gt;类包含文本、元数据和可选的其他媒体类型，如图像、音频和视频。&#xA;ETL管道有三个主要组成部分，&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实现供应商&amp;lt;List&lt;Document&gt;&amp;gt;的DocumentReader&lt;/li&gt;&#xA;&lt;li&gt;实现函数&amp;lt;List&lt;Document&gt;、List&lt;Document&gt;&amp;gt;的DocumentTransformer&lt;/li&gt;&#xA;&lt;li&gt;实现Consumer&amp;lt;List&lt;Document&gt;&amp;gt;的DocumentWriter&#xA;在&lt;code&gt;Document&lt;/code&gt;Reader的帮助下，从PDF、文本文件和其他文档类型创建&lt;code&gt;Document&lt;/code&gt;类内容。&#xA;要构建简单的ETL管道，可以将每种类型的实例链接在一起。&#xA;&#xA;  &lt;img src=&#34;../../images/etl-pipeline.jpg&#34; alt=&#34;ETL管道&#34; /&gt;&#xA;假设我们有这三种ETL类型的以下实例&lt;/li&gt;&#xA;&lt;li&gt;PagePdfDocumentReader——DocumentReader的实现&lt;/li&gt;&#xA;&lt;li&gt;TokenTextSplitter——DocumentTransformer的一种实现&lt;/li&gt;&#xA;&lt;li&gt;VectorStore DocumentWriter的实现&#xA;要将数据基本加载到向量数据库中以与检索增强生成模式一起使用，请使用Java函数样式语法中的以下代码。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vectorStore.&lt;span style=&#34;color:#a6e22e&#34;&gt;accept&lt;/span&gt;(tokenTextSplitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;apply&lt;/span&gt;(pdfReader.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者，您可以使用更自然地表达域的方法名&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vectorStore.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(tokenTextSplitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;(pdfReader.&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;etl接口&#34;&gt;&#xA;  ETL接口&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#etl%e6%8e%a5%e5%8f%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;ETL管道由以下接口和实现组成。&lt;/p&gt;&#xA;&lt;h2 id=&#34;文档阅读器&#34;&gt;&#xA;  文档阅读器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%87%e6%a1%a3%e9%98%85%e8%af%bb%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;提供来自不同来源的文档源。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DocumentReader&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Supplier&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; get();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文件变压器&#34;&gt;&#xA;  文件变压器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%87%e4%bb%b6%e5%8f%98%e5%8e%8b%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;将一批文档转换为处理工作流的一部分。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DocumentTransformer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Function&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transform&lt;/span&gt;(List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Document&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; transform) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; apply(transform);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文档编写器&#34;&gt;&#xA;  文档编写器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%87%e6%a1%a3%e7%bc%96%e5%86%99%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;管理ETL流程的最后阶段，准备存储文档。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
